"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Char = require("../Data.Char/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Eq_Generic = require("../Data.Eq.Generic/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser/index.js");
var Text_Parsing_StringParser_CodePoints = require("../Text.Parsing.StringParser.CodePoints/index.js");
var Text_Parsing_StringParser_Combinators = require("../Text.Parsing.StringParser.Combinators/index.js");

// | Represents an email address.
var EmailAddress = function (x) {
    return x;
};
var unsafeFromCharCode = (function () {
    var $8 = Data_Maybe.fromJust();
    return function ($9) {
        return $8(Data_Char.fromCharCode($9));
    };
})();
var takeWhile1 = function (f) {
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)((function () {
        var $10 = Data_Foldable.fold(Data_List_Types.foldableNonEmptyList)(Data_Monoid.monoidString);
        var $11 = Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_String_CodeUnits.singleton);
        return function ($12) {
            return $10($11($12));
        };
    })())(Text_Parsing_StringParser_Combinators.many1(Text_Parsing_StringParser_CodePoints.satisfy(f)));
};

// | Skip at least one instance of a phrase.
var skipMany1 = function (p) {
    return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(p))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(skipMany(p)))(function () {
            return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
        });
    });
};

// | Skip many instances of a phrase.
var skipMany = function (p) {
    return Control_Alt.alt(Text_Parsing_StringParser.altParser)(skipMany1(p))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit));
};
var skipWhile1 = function (x) {
    return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_CodePoints.satisfy(x)))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(skipMany(Text_Parsing_StringParser_CodePoints.satisfy(x))))(function () {
            return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
        });
    });
};
var nullChar = Text_Parsing_StringParser_CodePoints["char"](unsafeFromCharCode(0));
var localPart = function (v) {
    return v.localPart;
};
var lf = Text_Parsing_StringParser_CodePoints["char"]("\x0a");
var isWsp = function (x) {
    return x === " " || x === "\x09";
};
var whiteSpace = Text_Parsing_StringParser_CodePoints.satisfy(isWsp);
var whiteSpace1 = skipWhile1(isWsp);
var isAlphaNum = function (x) {
    var isDigit = x >= "0" && x <= "9";
    var isAlpha_ascii = x >= "a" && x <= "z" || x >= "A" && x <= "Z";
    return isDigit || isAlpha_ascii;
};
var inClassRange = function (start) {
    return function (end) {
        return function (c) {
            return c >= start && c <= end;
        };
    };
};
var isVchar = inClassRange(unsafeFromCharCode(33))(unsafeFromCharCode(126));
var vchar = Text_Parsing_StringParser_CodePoints.satisfy(isVchar);
var inClass = function (string) {
    return function ($$char) {
        return Data_String_CodeUnits.contains(Data_String_CodeUnits.singleton($$char))(string);
    };
};
var isObsNoWsCtl = function (c) {
    return inClassRange(unsafeFromCharCode(1))(unsafeFromCharCode(8))(c) || (inClassRange(unsafeFromCharCode(14))(unsafeFromCharCode(31))(c) || inClass("\x0b\x0c\x7f")(c));
};
var isCommentText = function (x) {
    return inClassRange(unsafeFromCharCode(33))(unsafeFromCharCode(39))(x) || (inClassRange(unsafeFromCharCode(42))(unsafeFromCharCode(91))(x) || (inClassRange(unsafeFromCharCode(93))(unsafeFromCharCode(126))(x) || isObsNoWsCtl(x)));
};
var isDomainText = function (x) {
    return inClassRange(unsafeFromCharCode(33))(unsafeFromCharCode(90))(x) || (inClassRange(unsafeFromCharCode(94))(unsafeFromCharCode(126))(x) || isObsNoWsCtl(x));
};
var obsNoWsCtl = Text_Parsing_StringParser_CodePoints.satisfy(isObsNoWsCtl);
var isQuotedText = function (x) {
    return inClass(Data_String_CodeUnits.singleton(unsafeFromCharCode(33)))(x) || (inClassRange(unsafeFromCharCode(35))(unsafeFromCharCode(91))(x) || (inClassRange(unsafeFromCharCode(93))(unsafeFromCharCode(126))(x) || isObsNoWsCtl(x)));
};
var genericEmailAddress = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showEmailAddress = {
    show: Data_Show_Generic.genericShow(genericEmailAddress)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "domainPart";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "localPart";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString))))({
        reflectSymbol: function () {
            return "EmailAddress";
        }
    }))
};
var eqEmailAddress = {
    eq: Data_Eq_Generic.genericEq(genericEmailAddress)(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqArgument(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
        reflectSymbol: function () {
            return "localPart";
        }
    })(Data_Eq.eqString))()({
        reflectSymbol: function () {
            return "domainPart";
        }
    })(Data_Eq.eqString)))))
};
var domainPart = function (v) {
    return v.domainPart;
};

// | Converts an email address to a 'String'
var toString = function (email) {
    return localPart(email) + ("@" + domainPart(email));
};
var cr = Text_Parsing_StringParser_CodePoints["char"]("\x0d");
var crlf = Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(cr)(lf));
var whiteSpaceOrNewLine = (function () {
    var p2 = skipMany1(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(crlf)(whiteSpace1));
    var p1 = Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(whiteSpace1)(Text_Parsing_StringParser_Combinators.optional(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(crlf)(whiteSpace1)));
    return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p1)(p2);
})();
var quotedPair = (function () {
    var what = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_CodePoints["char"]("\\")))(function () {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(vchar)(whiteSpace))(lf))(cr))(obsNoWsCtl))(nullChar);
    });
    return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(what)(function (c) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)("\\" + Data_String_CodeUnits.singleton(c));
    });
})();
var quotedContent = Control_Alt.alt(Text_Parsing_StringParser.altParser)(takeWhile1(isQuotedText))(quotedPair);
var quotedString = (function () {
    var what = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_CodePoints["char"]("\"")))(function () {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine))(quotedContent)))(function (ret) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine)))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_CodePoints["char"]("\"")))(function () {
                    return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(ret);
                });
            });
        });
    });
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(function (x) {
        return "\"" + (Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidString)(x) + "\"");
    })(what);
})();
var comment = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_CodePoints["char"]("(")))(function () {
    return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(skipMany(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(skipWhile1(isCommentText))(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(quotedPair)))(comment))(whiteSpaceOrNewLine)))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_CodePoints["char"](")")))(function () {
            return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
        });
    });
});
var commentOrWhiteSpace = skipMany(Control_Alt.alt(Text_Parsing_StringParser.altParser)(comment)(whiteSpaceOrNewLine));
var domainLiteral = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace))(function () {
    return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_CodePoints["char"]("[")))(function () {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine))(takeWhile1(isDomainText))))(function (domainText) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optional(whiteSpaceOrNewLine))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_CodePoints["char"]("]")))(function () {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace))(function () {
                        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)("[" + (Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidString)(domainText) + "]"));
                    });
                });
            });
        });
    });
});
var atom = (function () {
    var isAtomText = function (x) {
        return isAlphaNum(x) || inClass("!#$%&'*+/=?^_`{|}~-")(x);
    };
    return takeWhile1(isAtomText);
})();
var dottedAtoms = (function () {
    var inner2 = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace)))(function () {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(atom)(quotedString))(function (ret) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_Combinators.optional(commentOrWhiteSpace)))(function () {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(ret);
            });
        });
    });
    var inner1 = Text_Parsing_StringParser_Combinators.sepBy1(inner2)(Text_Parsing_StringParser_CodePoints["char"]("."));
    return Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Foldable.intercalate(Data_List_Types.foldableNonEmptyList)(Data_Monoid.monoidString)("."))(inner1);
})();
var domain = Control_Alt.alt(Text_Parsing_StringParser.altParser)(dottedAtoms)(domainLiteral);
var local = dottedAtoms;

// | A parser for email addresses.
var addrSpec = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(local)(function (l) {
    return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_CodePoints["char"]("@"))(function () {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(domain)(function (d) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_CodePoints.eof)(function () {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)({
                    localPart: l,
                    domainPart: d
                });
            });
        });
    });
});
module.exports = {
    EmailAddress: EmailAddress,
    addrSpec: addrSpec,
    domainPart: domainPart,
    localPart: localPart,
    toString: toString,
    genericEmailAddress: genericEmailAddress,
    showEmailAddress: showEmailAddress,
    eqEmailAddress: eqEmailAddress
};
