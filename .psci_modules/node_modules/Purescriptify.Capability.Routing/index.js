"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Halogen_Subscription = require("../Halogen.Subscription/index.js");
var React_Halo_Internal_Control = require("../React.Halo.Internal.Control/index.js");
var reload = function (dict) {
    return dict.reload;
};
var redirect = function (dict) {
    return dict.redirect;
};
var read = function (dict) {
    return dict.read;
};
var navigate = function (dict) {
    return dict.navigate;
};
var getEmitter = function (dict) {
    return dict.getEmitter;
};
var subscribe = function (dictMonadRouting) {
    return function (f) {
        return Control_Bind.bind(React_Halo_Internal_Control.bindHaloM)(Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadRouting.Monad0())(getEmitter(dictMonadRouting)))(function (emitter) {
            return Data_Functor["void"](React_Halo_Internal_Control.functorHaloM)(React_Halo_Internal_Control.subscribe(Data_Functor.map(Halogen_Subscription.functorEmitter)(f)(emitter)));
        });
    };
};
var monadRoutingHaloM = function (dictMonadRouting) {
    return {
        read: Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadRouting.Monad0())(read(dictMonadRouting)),
        reload: Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadRouting.Monad0())(reload(dictMonadRouting)),
        getEmitter: Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadRouting.Monad0())(getEmitter(dictMonadRouting)),
        navigate: (function () {
            var $8 = Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadRouting.Monad0());
            var $9 = navigate(dictMonadRouting);
            return function ($10) {
                return $8($9($10));
            };
        })(),
        redirect: (function () {
            var $11 = Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadRouting.Monad0());
            var $12 = redirect(dictMonadRouting);
            return function ($13) {
                return $11($12($13));
            };
        })(),
        Monad0: function () {
            return React_Halo_Internal_Control.monadHaloM;
        }
    };
};
module.exports = {
    getEmitter: getEmitter,
    navigate: navigate,
    read: read,
    redirect: redirect,
    reload: reload,
    subscribe: subscribe,
    monadRoutingHaloM: monadRoutingHaloM
};
