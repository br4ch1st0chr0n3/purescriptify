"use strict";
var Affjax = require("../Affjax/index.js");
var Affjax_RequestBody = require("../Affjax.RequestBody/index.js");
var Affjax_RequestHeader = require("../Affjax.RequestHeader/index.js");
var Affjax_ResponseFormat = require("../Affjax.ResponseFormat/index.js");
var Affjax_ResponseHeader = require("../Affjax.ResponseHeader/index.js");
var Affjax_StatusCode = require("../Affjax.StatusCode/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_Identity_Trans = require("../Control.Monad.Identity.Trans/index.js");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");
var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FormURLEncoded = require("../Data.FormURLEncoded/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HTTP_Method = require("../Data.HTTP.Method/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_String_NonEmpty_Internal = require("../Data.String.NonEmpty.Internal/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var URI_Extra_QueryPairs = require("../URI.Extra.QueryPairs/index.js");
var URI_Host = require("../URI.Host/index.js");
var URI_Path_Absolute = require("../URI.Path.Absolute/index.js");
var URI_Path_Segment = require("../URI.Path.Segment/index.js");
var URI_RelativeRef = require("../URI.RelativeRef/index.js");
var UnexpectedHTTPStatus = (function () {
    function UnexpectedHTTPStatus() {

    };
    UnexpectedHTTPStatus.value = new UnexpectedHTTPStatus();
    return UnexpectedHTTPStatus;
})();
var MalformedContent = (function () {
    function MalformedContent(value0) {
        this.value0 = value0;
    };
    MalformedContent.create = function (value0) {
        return new MalformedContent(value0);
    };
    return MalformedContent;
})();
var ConnectingError = (function () {
    function ConnectingError(value0) {
        this.value0 = value0;
    };
    ConnectingError.create = function (value0) {
        return new ConnectingError(value0);
    };
    return ConnectingError;
})();
var AjaxError = function (x) {
    return x;
};
var toQueryValueString = {
    toQueryValue: URI_Extra_QueryPairs.valueFromString
};
var toQueryValueJson = {
    toQueryValue: function (value) {
        return URI_Extra_QueryPairs.valueFromString(Data_Argonaut_Core.caseJsonString(Data_Argonaut_Core.stringify(value))(Control_Category.identity(Control_Category.categoryFn))(value));
    }
};
var toPathSegmentString = {
    toPathSegment: Control_Category.identity(Control_Category.categoryFn)
};
var toPathSegmentJson = {
    toPathSegment: function (value) {
        return Data_Argonaut_Core.caseJsonString(Data_Argonaut_Core.stringify(value))(Control_Category.identity(Control_Category.categoryFn))(value);
    }
};
var toHeaderString = {
    toHeader: Control_Category.identity(Control_Category.categoryFn)
};
var toHeaderJson = {
    toHeader: function (value) {
        return Data_Argonaut_Core.caseJsonString(Data_Argonaut_Core.stringify(value))(Control_Category.identity(Control_Category.categoryFn))(value);
    }
};
var functorErrorDescription = {
    map: function (f) {
        return function (m) {
            if (m instanceof UnexpectedHTTPStatus) {
                return UnexpectedHTTPStatus.value;
            };
            if (m instanceof MalformedContent) {
                return new MalformedContent(f(m.value0));
            };
            if (m instanceof ConnectingError) {
                return new ConnectingError(m.value0);
            };
            throw new Error("Failed pattern match at Servant.PureScript (line 211, column 1 - line 211, column 41): " + [ m.constructor.name ]);
        };
    }
};
var contentTypeJson = {
    responseFormat: function (v) {
        return Affjax_ResponseFormat.json;
    },
    requestBody: Affjax_RequestBody.json
};
var toQueryValue = function (dict) {
    return dict.toQueryValue;
};
var toPathSegment = function (dict) {
    return dict.toPathSegment;
};
var toHeader = function (dict) {
    return dict.toHeader;
};
var segmentsToPathAbsolute = (function () {
    var convertNonEmpty = function (v) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(Data_Functor.map(Data_Maybe.functorMaybe)(URI_Path_Segment.segmentNZFromString)(Data_String_NonEmpty_Internal.fromString(v.value0))))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Functor.map(Data_Functor.functorArray)(URI_Path_Segment.segmentFromString)(v.value1)));
    };
    var $94 = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(function ($96) {
        return convertNonEmpty(Data_Array_NonEmpty.toNonEmpty($96));
    })(Data_Array_NonEmpty.fromArray);
    return function ($95) {
        return URI_Path_Absolute.PathAbsolute($94($95));
    };
})();
var responseFormat = function (dict) {
    return dict.responseFormat;
};
var requestBody = function (dict) {
    return dict.requestBody;
};
var monadAjaxAff = {
    request: function (dictContentType) {
        return function (dictContentType1) {
            return function (v) {
                return function (req) {
                    var aReq = {
                        method: req.method,
                        url: URI_RelativeRef.print({
                            printUserInfo: Control_Category.identity(Control_Category.categoryFn),
                            printHosts: URI_Host.print,
                            printPath: Control_Category.identity(Control_Category.categoryFn),
                            printRelPath: function ($97) {
                                return Data_Either.Left.create(segmentsToPathAbsolute($97));
                            },
                            printQuery: URI_Extra_QueryPairs.print(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)),
                            printFragment: Control_Category.identity(Control_Category.categoryFn)
                        })(req.uri),
                        headers: req.headers,
                        content: Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                            var $98 = requestBody(dictContentType);
                            return function ($99) {
                                return $98(req.encode($99));
                            };
                        })())(req.content),
                        responseFormat: responseFormat(dictContentType1)(req),
                        password: Affjax.defaultRequest.password,
                        timeout: Affjax.defaultRequest.timeout,
                        username: Affjax.defaultRequest.username,
                        withCredentials: Affjax.defaultRequest.withCredentials
                    };
                    var mkError = function (response) {
                        return function (description) {
                            return {
                                request: aReq,
                                response: response,
                                description: description
                            };
                        };
                    };
                    return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)((function () {
                        var $100 = mkError(Data_Maybe.Nothing.value);
                        return function ($101) {
                            return $100(ConnectingError.create($101));
                        };
                    })())(Affjax.request(aReq)))(function (response) {
                        var status = Data_Newtype.unwrap()(response.status);
                        return Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)((function () {
                            var $73 = status < 200 || status >= 300;
                            if ($73) {
                                return new Data_Either.Left(mkError(new Data_Maybe.Just(response))(UnexpectedHTTPStatus.value));
                            };
                            return Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)((function () {
                                var $102 = mkError(new Data_Maybe.Just(response));
                                return function ($103) {
                                    return $102(MalformedContent.create($103));
                                };
                            })())(req.decode(response.body));
                        })());
                    }));
                };
            };
        };
    },
    Monad0: function () {
        return Effect_Aff.monadAff;
    }
};
var request = function (dict) {
    return dict.request;
};
var monadAjaxContT = function (dictMonadAjax) {
    return {
        request: function (dictContentType) {
            return function (dictContentType1) {
                return function (api) {
                    var $104 = Control_Monad_Trans_Class.lift(Control_Monad_Cont_Trans.monadTransContT)(dictMonadAjax.Monad0());
                    var $105 = request(dictMonadAjax)(dictContentType)(dictContentType1)(api);
                    return function ($106) {
                        return $104($105($106));
                    };
                };
            };
        },
        Monad0: function () {
            return Control_Monad_Cont_Trans.monadContT(dictMonadAjax.Monad0());
        }
    };
};
var monadAjaxExceptT = function (dictMonadAjax) {
    return {
        request: function (dictContentType) {
            return function (dictContentType1) {
                return function (api) {
                    var $107 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonadAjax.Monad0());
                    var $108 = request(dictMonadAjax)(dictContentType)(dictContentType1)(api);
                    return function ($109) {
                        return $107($108($109));
                    };
                };
            };
        },
        Monad0: function () {
            return Control_Monad_Except_Trans.monadExceptT(dictMonadAjax.Monad0());
        }
    };
};
var monadAjaxIdentityT = function (dictMonadAjax) {
    return {
        request: function (dictContentType) {
            return function (dictContentType1) {
                return function (api) {
                    var $110 = Control_Monad_Trans_Class.lift(Control_Monad_Identity_Trans.monadTransIdentityT)(dictMonadAjax.Monad0());
                    var $111 = request(dictMonadAjax)(dictContentType)(dictContentType1)(api);
                    return function ($112) {
                        return $110($111($112));
                    };
                };
            };
        },
        Monad0: function () {
            return Control_Monad_Identity_Trans.monadIdentityT(dictMonadAjax.Monad0());
        }
    };
};
var monadAjaxMaybeT = function (dictMonadAjax) {
    return {
        request: function (dictContentType) {
            return function (dictContentType1) {
                return function (api) {
                    var $113 = Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(dictMonadAjax.Monad0());
                    var $114 = request(dictMonadAjax)(dictContentType)(dictContentType1)(api);
                    return function ($115) {
                        return $113($114($115));
                    };
                };
            };
        },
        Monad0: function () {
            return Control_Monad_Maybe_Trans.monadMaybeT(dictMonadAjax.Monad0());
        }
    };
};
var monadAjaxRWST = function (dictMonoid) {
    return function (dictMonadAjax) {
        return {
            request: function (dictContentType) {
                return function (dictContentType1) {
                    return function (api) {
                        var $116 = Control_Monad_Trans_Class.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))(dictMonadAjax.Monad0());
                        var $117 = request(dictMonadAjax)(dictContentType)(dictContentType1)(api);
                        return function ($118) {
                            return $116($117($118));
                        };
                    };
                };
            },
            Monad0: function () {
                return Control_Monad_RWS_Trans.monadRWST(dictMonadAjax.Monad0())(dictMonoid);
            }
        };
    };
};
var monadAjaxReaderT = function (dictMonadAjax) {
    return {
        request: function (dictContentType) {
            return function (dictContentType1) {
                return function (api) {
                    var $119 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadAjax.Monad0());
                    var $120 = request(dictMonadAjax)(dictContentType)(dictContentType1)(api);
                    return function ($121) {
                        return $119($120($121));
                    };
                };
            };
        },
        Monad0: function () {
            return Control_Monad_Reader_Trans.monadReaderT(dictMonadAjax.Monad0());
        }
    };
};
var monadAjaxStateT = function (dictMonadAjax) {
    return {
        request: function (dictContentType) {
            return function (dictContentType1) {
                return function (api) {
                    var $122 = Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadAjax.Monad0());
                    var $123 = request(dictMonadAjax)(dictContentType)(dictContentType1)(api);
                    return function ($124) {
                        return $122($123($124));
                    };
                };
            };
        },
        Monad0: function () {
            return Control_Monad_State_Trans.monadStateT(dictMonadAjax.Monad0());
        }
    };
};
var monadAjaxWriterT = function (dictMonoid) {
    return function (dictMonadAjax) {
        return {
            request: function (dictContentType) {
                return function (dictContentType1) {
                    return function (api) {
                        var $125 = Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))(dictMonadAjax.Monad0());
                        var $126 = request(dictMonadAjax)(dictContentType)(dictContentType1)(api);
                        return function ($127) {
                            return $125($126($127));
                        };
                    };
                };
            },
            Monad0: function () {
                return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictMonadAjax.Monad0());
            }
        };
    };
};
var printAjaxError = function (printResponseBody) {
    return function (printDecodeError) {
        return function (v) {
            return Data_String_Common.joinWith("\x0a")(Control_Bind.join(Control_Bind.bindArray)([ [ "Error making web request:" ], [ "Request Info:" ], Data_Functor.map(Data_Functor.functorArray)(function (v1) {
                return " " + v1;
            })([ "URI: " + v.request.url, "Method: " + Data_Show.show(Data_Either.showEither(Data_HTTP_Method.showMethod)(Data_HTTP_Method.showCustomMethod))(v.request.method), "Headers: " + Data_Show.show(Data_Show.showArray(Affjax_RequestHeader.showRequestHeader))(v.request.headers), "Body: " + Data_Show.show(Data_Maybe.showMaybe(Data_Show.showString))(Data_Function.flip(Data_Functor.map(Data_Maybe.functorMaybe))(v.request.content)(function (v1) {
                if (v1 instanceof Affjax_RequestBody.ArrayView) {
                    return "ArrayView";
                };
                if (v1 instanceof Affjax_RequestBody.Blob) {
                    return "Blob";
                };
                if (v1 instanceof Affjax_RequestBody.Document) {
                    return "Document";
                };
                if (v1 instanceof Affjax_RequestBody["String"]) {
                    return v1.value0;
                };
                if (v1 instanceof Affjax_RequestBody.FormData) {
                    return "FormData";
                };
                if (v1 instanceof Affjax_RequestBody.FormURLEncoded) {
                    return Data_Show.show(Data_FormURLEncoded.showFormUrlEncoded)(v1.value0);
                };
                if (v1 instanceof Affjax_RequestBody.Json) {
                    return Data_Argonaut_Core.stringifyWithIndent(2)(v1.value0);
                };
                throw new Error("Failed pattern match at Servant.PureScript (line 230, column 63 - line 237, column 52): " + [ v1.constructor.name ]);
            })) ]), Control_Bind.bind(Control_Bind.bindArray)(Data_Array.fromFoldable(Data_Foldable.foldableMaybe)(v.response))(function (resp) {
                return Control_Bind.join(Control_Bind.bindArray)([ [ "Response Info:" ], Data_Functor.map(Data_Functor.functorArray)(function (v1) {
                    return " " + v1;
                })([ "StatusCode: " + Data_Show.show(Affjax_StatusCode.showStatusCode)(resp.status), "StatusText: " + Data_Show.show(Data_Show.showString)(resp.statusText), "Headers: " + Data_Show.show(Data_Show.showArray(Affjax_ResponseHeader.showResponseHeader))(resp.headers), "Body: " + printResponseBody(resp.body) ]) ]);
            }), [ "Failure:" ], Data_Functor.map(Data_Functor.functorArray)(function (v1) {
                return "  " + v1;
            })(Data_String_Common.split("\x0a")((function () {
                if (v.description instanceof UnexpectedHTTPStatus) {
                    return "Unexpected HTTP Status";
                };
                if (v.description instanceof MalformedContent) {
                    return printDecodeError(v.description.value0);
                };
                if (v.description instanceof ConnectingError) {
                    return Affjax.printError(v.description.value0);
                };
                throw new Error("Failed pattern match at Servant.PureScript (line 249, column 44 - line 252, column 57): " + [ v.description.constructor.name ]);
            })())) ]));
        };
    };
};
var paramListQueryPairs = function (dictToQueryValue) {
    return function (name) {
        var $128 = Data_Functor.map(Data_Functor.functorArray)((function () {
            var $130 = Data_Tuple.Tuple.create(URI_Extra_QueryPairs.keyFromString(name));
            var $131 = toQueryValue(dictToQueryValue);
            return function ($132) {
                return $130(Data_Maybe.Just.create($131($132)));
            };
        })());
        return function ($129) {
            return URI_Extra_QueryPairs.QueryPairs($128($129));
        };
    };
};
var paramQueryPairs = function (dictToQueryValue) {
    return function (name) {
        var $133 = paramListQueryPairs(dictToQueryValue)(name);
        var $134 = Data_Array.fromFoldable(Data_Foldable.foldableMaybe);
        return function ($135) {
            return $133($134($135));
        };
    };
};
var flagQueryPairs = function (v) {
    return function (v1) {
        if (v1) {
            return [ new Data_Tuple.Tuple(URI_Extra_QueryPairs.keyFromString(v), Data_Maybe.Nothing.value) ];
        };
        return [  ];
    };
};
module.exports = {
    request: request,
    requestBody: requestBody,
    responseFormat: responseFormat,
    toHeader: toHeader,
    toPathSegment: toPathSegment,
    toQueryValue: toQueryValue,
    flagQueryPairs: flagQueryPairs,
    paramQueryPairs: paramQueryPairs,
    paramListQueryPairs: paramListQueryPairs,
    segmentsToPathAbsolute: segmentsToPathAbsolute,
    AjaxError: AjaxError,
    UnexpectedHTTPStatus: UnexpectedHTTPStatus,
    MalformedContent: MalformedContent,
    ConnectingError: ConnectingError,
    printAjaxError: printAjaxError,
    toPathSegmentString: toPathSegmentString,
    toPathSegmentJson: toPathSegmentJson,
    toQueryValueString: toQueryValueString,
    toQueryValueJson: toQueryValueJson,
    toHeaderString: toHeaderString,
    toHeaderJson: toHeaderJson,
    contentTypeJson: contentTypeJson,
    monadAjaxAff: monadAjaxAff,
    monadAjaxContT: monadAjaxContT,
    monadAjaxIdentityT: monadAjaxIdentityT,
    monadAjaxExceptT: monadAjaxExceptT,
    monadAjaxMaybeT: monadAjaxMaybeT,
    monadAjaxRWST: monadAjaxRWST,
    monadAjaxReaderT: monadAjaxReaderT,
    monadAjaxWriterT: monadAjaxWriterT,
    monadAjaxStateT: monadAjaxStateT,
    functorErrorDescription: functorErrorDescription
};
