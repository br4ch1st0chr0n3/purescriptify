
// File auto generated by purescript-bridge! --
"use strict";
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Data_Argonaut_Decode_Aeson = require("../Data.Argonaut.Decode.Aeson/index.js");
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");
var Data_Argonaut_Encode_Aeson = require("../Data.Argonaut.Encode.Aeson/index.js");
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant/index.js");
var Data_Lens_Iso_Newtype = require("../Data.Lens.Iso.Newtype/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Op = require("../Data.Op/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Servant_PureScript = require("../Servant.PureScript/index.js");
var AuthorizationHeader = function (x) {
    return x;
};
var toHeaderAuthorizationHead = Servant_PureScript.toHeaderString;
var newtypeAuthorizationHeade = {
    Coercible0: function () {
        return undefined;
    }
};
var genericAuthorizationHeade = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showAuthorizationHeader = {
    show: function (a) {
        return Data_Show_Generic.genericShow(genericAuthorizationHeade)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
            reflectSymbol: function () {
                return "AuthorizationHeader";
            }
        }))(a);
    }
};
var eqAuthorizationHeader = {
    eq: function (x) {
        return function (y) {
            return x === y;
        };
    }
};
var ordAuthorizationHeader = {
    compare: function (x) {
        return function (y) {
            return Data_Ord.compare(Data_Ord.ordString)(x)(y);
        };
    },
    Eq0: function () {
        return eqAuthorizationHeader;
    }
};
var encodeJsonAuthorizationHe = {
    encodeJson: Control_Lazy.defer(Control_Lazy.lazyFn)(function (v) {
        return Data_Argonaut_Encode_Aeson.encode(Data_Functor_Contravariant.cmap(Data_Op.contravariantOp)(Data_Newtype.unwrap())(Data_Argonaut_Encode_Aeson.value(Data_Argonaut_Encode_Class.encodeJsonJString)));
    })
};
var decodeJsonAuthorizationHe = {
    decodeJson: Control_Lazy.defer(Control_Lazy.lazyFn)(function (v) {
        return Data_Argonaut_Decode_Aeson.decode(Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Data_Either.functorEither))(AuthorizationHeader)(Data_Argonaut_Decode_Aeson.value(Data_Argonaut_Decode_Class.decodeJsonString)));
    })
};

//------------------------------------------------------------------------------
var _AuthorizationHeader = function (dictProfunctor) {
    return Data_Lens_Iso_Newtype["_Newtype"]()()(dictProfunctor);
};
module.exports = {
    AuthorizationHeader: AuthorizationHeader,
    "_AuthorizationHeader": _AuthorizationHeader,
    toHeaderAuthorizationHead: toHeaderAuthorizationHead,
    eqAuthorizationHeader: eqAuthorizationHeader,
    ordAuthorizationHeader: ordAuthorizationHeader,
    showAuthorizationHeader: showAuthorizationHeader,
    encodeJsonAuthorizationHe: encodeJsonAuthorizationHe,
    decodeJsonAuthorizationHe: decodeJsonAuthorizationHe,
    genericAuthorizationHeade: genericAuthorizationHeade,
    newtypeAuthorizationHeade: newtypeAuthorizationHeade
};
