"use strict";
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Decode_Error = require("../Data.Argonaut.Decode.Error/index.js");
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Text_Email_Parser = require("../Text.Email.Parser/index.js");
var Text_Email_Validate = require("../Text.Email.Validate/index.js");
var Email = function (x) {
    return x;
};
var showEmail = {
    show: function (v) {
        return Text_Email_Parser.toString(v);
    }
};
var eqEmail = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Text_Email_Parser.eqEmailAddress)(x)(y);
        };
    }
};
var encodeJsonEmail = {
    encodeJson: function (v) {
        return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(Text_Email_Parser.toString(v));
    }
};
var decodeJsonEmail = {
    decodeJson: Data_Argonaut_Core.caseJsonString(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("string")))(function (strValue) {
        var v = Text_Email_Validate.emailAddress(strValue);
        if (v instanceof Data_Maybe.Just) {
            return new Data_Either.Right(v.value0);
        };
        if (v instanceof Data_Maybe.Nothing) {
            return new Data_Either.Left(new Data_Argonaut_Decode_Error.UnexpectedValue(Data_Argonaut_Core.fromString(strValue + " is not a valid email.")));
        };
        throw new Error("Failed pattern match at Purescriptify.Utilities.Email (line 29, column 5 - line 31, column 92): " + [ v.constructor.name ]);
    })
};
var mkEmail = (function () {
    var $18 = Data_Functor.map(Data_Maybe.functorMaybe)(Email);
    return function ($19) {
        return $18(Text_Email_Validate.emailAddress($19));
    };
})();
module.exports = {
    mkEmail: mkEmail,
    showEmail: showEmail,
    eqEmail: eqEmail,
    encodeJsonEmail: encodeJsonEmail,
    decodeJsonEmail: decodeJsonEmail
};
