"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");
var Data_Array_NonEmpty_Internal = require("../Data.Array.NonEmpty.Internal/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Void = require("../Data.Void/index.js");
var Dodo = require("../Dodo/index.js");
var Dodo_Internal = require("../Dodo.Internal/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var PureScript_CST_Types = require("../PureScript.CST.Types/index.js");
var Tidy_Doc = require("../Tidy.Doc/index.js");
var Tidy_Hang = require("../Tidy.Hang/index.js");
var Tidy_Precedence = require("../Tidy.Precedence/index.js");
var Tidy_Token = require("../Tidy.Token/index.js");
var Tidy_Util = require("../Tidy.Util/index.js");
var TypeArrowFirst = (function () {
    function TypeArrowFirst() {

    };
    TypeArrowFirst.value = new TypeArrowFirst();
    return TypeArrowFirst;
})();
var TypeArrowLast = (function () {
    function TypeArrowLast() {

    };
    TypeArrowLast.value = new TypeArrowLast();
    return TypeArrowLast;
})();
var PolyForall = (function () {
    function PolyForall(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    PolyForall.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new PolyForall(value0, value1, value2);
            };
        };
    };
    return PolyForall;
})();
var PolyArrow = (function () {
    function PolyArrow(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    PolyArrow.create = function (value0) {
        return function (value1) {
            return new PolyArrow(value0, value1);
        };
    };
    return PolyArrow;
})();
var ImportWrapSource = (function () {
    function ImportWrapSource() {

    };
    ImportWrapSource.value = new ImportWrapSource();
    return ImportWrapSource;
})();
var ImportWrapAuto = (function () {
    function ImportWrapAuto() {

    };
    ImportWrapAuto.value = new ImportWrapAuto();
    return ImportWrapAuto;
})();
var ImportSortSource = (function () {
    function ImportSortSource() {

    };
    ImportSortSource.value = new ImportSortSource();
    return ImportSortSource;
})();
var ImportSortIde = (function () {
    function ImportSortIde() {

    };
    ImportSortIde.value = new ImportSortIde();
    return ImportSortIde;
})();
var ImportClassCmp = (function () {
    function ImportClassCmp(value0) {
        this.value0 = value0;
    };
    ImportClassCmp.create = function (value0) {
        return new ImportClassCmp(value0);
    };
    return ImportClassCmp;
})();
var ImportTypeOpCmp = (function () {
    function ImportTypeOpCmp(value0) {
        this.value0 = value0;
    };
    ImportTypeOpCmp.create = function (value0) {
        return new ImportTypeOpCmp(value0);
    };
    return ImportTypeOpCmp;
})();
var ImportTypeCmp = (function () {
    function ImportTypeCmp(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    ImportTypeCmp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new ImportTypeCmp(value0, value1, value2);
            };
        };
    };
    return ImportTypeCmp;
})();
var ImportValueCmp = (function () {
    function ImportValueCmp(value0) {
        this.value0 = value0;
    };
    ImportValueCmp.create = function (value0) {
        return new ImportValueCmp(value0);
    };
    return ImportValueCmp;
})();
var ImportOpCmp = (function () {
    function ImportOpCmp(value0) {
        this.value0 = value0;
    };
    ImportOpCmp.create = function (value0) {
        return new ImportOpCmp(value0);
    };
    return ImportOpCmp;
})();
var ImportErrorCmp = (function () {
    function ImportErrorCmp() {

    };
    ImportErrorCmp.value = new ImportErrorCmp();
    return ImportErrorCmp;
})();
var ImportModuleCmp = (function () {
    function ImportModuleCmp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    ImportModuleCmp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new ImportModuleCmp(value0, value1, value2, value3);
                };
            };
        };
    };
    return ImportModuleCmp;
})();
var Grouped = (function () {
    function Grouped() {

    };
    Grouped.value = new Grouped();
    return Grouped;
})();
var NotGrouped = (function () {
    function NotGrouped() {

    };
    NotGrouped.value = new NotGrouped();
    return NotGrouped;
})();
var IfThen = (function () {
    function IfThen(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    IfThen.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new IfThen(value0, value1, value2, value3);
                };
            };
        };
    };
    return IfThen;
})();
var ElseIfThen = (function () {
    function ElseIfThen(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    };
    ElseIfThen.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return new ElseIfThen(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return ElseIfThen;
})();
var Else = (function () {
    function Else(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Else.create = function (value0) {
        return function (value1) {
            return new Else(value0, value1);
        };
    };
    return Else;
})();
var DeclGroupSame = (function () {
    function DeclGroupSame() {

    };
    DeclGroupSame.value = new DeclGroupSame();
    return DeclGroupSame;
})();
var DeclGroupHard = (function () {
    function DeclGroupHard() {

    };
    DeclGroupHard.value = new DeclGroupHard();
    return DeclGroupHard;
})();
var DeclGroupSoft = (function () {
    function DeclGroupSoft() {

    };
    DeclGroupSoft.value = new DeclGroupSoft();
    return DeclGroupSoft;
})();
var DeclGroupValueSignature = (function () {
    function DeclGroupValueSignature(value0) {
        this.value0 = value0;
    };
    DeclGroupValueSignature.create = function (value0) {
        return new DeclGroupValueSignature(value0);
    };
    return DeclGroupValueSignature;
})();
var DeclGroupValue = (function () {
    function DeclGroupValue(value0) {
        this.value0 = value0;
    };
    DeclGroupValue.create = function (value0) {
        return new DeclGroupValue(value0);
    };
    return DeclGroupValue;
})();
var DeclGroupTypeSignature = (function () {
    function DeclGroupTypeSignature(value0) {
        this.value0 = value0;
    };
    DeclGroupTypeSignature.create = function (value0) {
        return new DeclGroupTypeSignature(value0);
    };
    return DeclGroupTypeSignature;
})();
var DeclGroupType = (function () {
    function DeclGroupType(value0) {
        this.value0 = value0;
    };
    DeclGroupType.create = function (value0) {
        return new DeclGroupType(value0);
    };
    return DeclGroupType;
})();
var DeclGroupClass = (function () {
    function DeclGroupClass(value0) {
        this.value0 = value0;
    };
    DeclGroupClass.create = function (value0) {
        return new DeclGroupClass(value0);
    };
    return DeclGroupClass;
})();
var DeclGroupInstance = (function () {
    function DeclGroupInstance() {

    };
    DeclGroupInstance.value = new DeclGroupInstance();
    return DeclGroupInstance;
})();
var DeclGroupFixity = (function () {
    function DeclGroupFixity() {

    };
    DeclGroupFixity.value = new DeclGroupFixity();
    return DeclGroupFixity;
})();
var DeclGroupForeign = (function () {
    function DeclGroupForeign() {

    };
    DeclGroupForeign.value = new DeclGroupForeign();
    return DeclGroupForeign;
})();
var DeclGroupRole = (function () {
    function DeclGroupRole() {

    };
    DeclGroupRole.value = new DeclGroupRole();
    return DeclGroupRole;
})();
var DeclGroupUnknown = (function () {
    function DeclGroupUnknown() {

    };
    DeclGroupUnknown.value = new DeclGroupUnknown();
    return DeclGroupUnknown;
})();
var toQualifiedOperatorTree = function (precMap) {
    return function (opNs) {
        return Tidy_Precedence.toOperatorTree(precMap)(function (v) {
            return new Tidy_Precedence.QualifiedOperator(v.module, opNs, v.name);
        });
    };
};
var toPolytype = (function () {
    var go = function ($copy_init) {
        return function ($copy_v) {
            var $tco_var_init = $copy_init;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(init, v) {
                if (v instanceof PureScript_CST_Types.TypeForall) {
                    $tco_var_init = Data_Array.snoc(init)(new PolyForall(v.value0, v.value1, v.value2));
                    $copy_v = v.value3;
                    return;
                };
                if (v instanceof PureScript_CST_Types.TypeArrow) {
                    $tco_var_init = Data_Array.snoc(init)(new PolyArrow(v.value0, v.value1));
                    $copy_v = v.value2;
                    return;
                };
                if (v instanceof PureScript_CST_Types.TypeConstrained) {
                    $tco_var_init = Data_Array.snoc(init)(new PolyArrow(v.value0, v.value1));
                    $copy_v = v.value2;
                    return;
                };
                $tco_done = true;
                return {
                    init: init,
                    last: v
                };
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_init, $copy_v);
            };
            return $tco_result;
        };
    };
    return go([  ]);
})();
var toElseIfChain = function (ifte) {
    var go = function ($copy_acc) {
        return function ($copy_curr) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, curr) {
                if (curr["false"] instanceof PureScript_CST_Types.ExprIf) {
                    var chain = new ElseIfThen(curr["else"], curr["false"].value0.keyword, curr["false"].value0.cond, curr["false"].value0.then, curr["false"]["value0"]["true"]);
                    $tco_var_acc = Data_Array_NonEmpty.snoc(acc)(chain);
                    $copy_curr = curr["false"].value0;
                    return;
                };
                $tco_done = true;
                return Data_Array_NonEmpty.snoc(acc)(new Else(curr["else"], curr["false"]));
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_curr);
            };
            return $tco_result;
        };
    };
    return go(Control_Applicative.pure(Data_Array_NonEmpty_Internal.applicativeNonEmptyArray)(new IfThen(ifte.keyword, ifte.cond, ifte.then, ifte["true"])))(ifte);
};
var formatString = (function () {
    var $978 = Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(function (v) {
        var v1 = Data_Array.unsnoc(v.tail);
        if (v1 instanceof Data_Maybe.Nothing) {
            return Tidy_Doc.text(v.head);
        };
        if (v1 instanceof Data_Maybe.Just) {
            return Tidy_Doc["break"](Tidy_Doc["break"](Tidy_Doc.text(v.head + "\\"))(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc["break"])(function (str) {
                return Tidy_Doc.text("\\" + (str + "\\"));
            })(v1.value0.init)))(Tidy_Doc.text("\\" + v1.value0.last));
        };
        throw new Error("Failed pattern match at Tidy (line 186, column 3 - line 191, column 41): " + [ v1.constructor.name ]);
    });
    return function ($979) {
        return $978(Data_Array.uncons(Tidy_Util.splitStringEscapeLines($979)));
    };
})();
var formatRawString = (function () {
    var $980 = Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(function (v) {
        var $186 = Data_Array["null"](v.tail);
        if ($186) {
            return Tidy_Doc.text(v.head);
        };
        return Tidy_Doc.fromDoc(Dodo.lines(Data_Foldable.foldableArray)([ Dodo.text(v.head), Dodo.locally(function (v1) {
            return {
                indent: 0,
                indentSpaces: "",
                indentUnit: v1.indentUnit,
                indentWidth: v1.indentWidth,
                pageWidth: v1.pageWidth,
                ribbonRatio: v1.ribbonRatio
            };
        })(Data_Array.intercalate(Dodo_Internal.monoidDoc)(Dodo["break"])(Data_Functor.map(Data_Functor.functorArray)(Dodo.text)(v.tail))) ]));
    });
    return function ($981) {
        return $980(Data_Array.uncons(Tidy_Util.splitLines($981)));
    };
})();
var formatListElem = function (alignment) {
    return function (format) {
        return function (conf) {
            return function (b) {
                return Tidy_Doc.flexGroup(Tidy_Doc.align(alignment)(Tidy_Doc.anchor(format(conf)(b))));
            };
        };
    };
};
var formatHangingOperatorTree = function (formatOperator) {
    return function (format) {
        return function (conf) {
            var opWidth = function (v) {
                return v.token.range.end.column - v.token.range.start.column | 0;
            };
            var go = function (v) {
                if (v instanceof Tidy_Precedence.OpPure) {
                    return format(conf)(v.value0);
                };
                if (v instanceof Tidy_Precedence.OpList) {
                    return Tidy_Hang.hangOps(go(v.value0))(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(function (v1) {
                        return new Tidy_Hang.HangingOp(opWidth(v1.value0), formatOperator(conf)(v1.value0), go(v1.value1));
                    })(v.value2));
                };
                throw new Error("Failed pattern match at Tidy (line 1169, column 8 - line 1174, column 93): " + [ v.constructor.name ]);
            };
            return go;
        };
    };
};
var formatErrorVoid = {
    formatError: Data_Void.absurd
};
var formatError = function (dict) {
    return dict.formatError;
};
var formatDeclGroups = function (declSeparator) {
    return function (k) {
        return function (format) {
            return function (conf) {
                var joinDecls = function (acc) {
                    var newDoc = Tidy_Doc.joinWithMap(Data_List_Types.foldableNonEmptyList)(Tidy_Doc["break"])(format(conf))(acc.decls);
                    if (acc.sep instanceof DeclGroupSame) {
                        return Tidy_Doc["break"](newDoc)(acc.doc);
                    };
                    if (acc.sep instanceof DeclGroupSoft) {
                        return Tidy_Doc.flexDoubleBreak(newDoc)(acc.doc);
                    };
                    if (acc.sep instanceof DeclGroupHard) {
                        return Tidy_Doc["break"](newDoc)(Tidy_Doc.forceMinSourceBreaks(2)(acc.doc));
                    };
                    throw new Error("Failed pattern match at Tidy (line 1381, column 19 - line 1387, column 52): " + [ acc.sep.constructor.name ]);
                };
                var go = function (decl) {
                    return function ($982) {
                        return Data_Maybe.Just.create((function (v) {
                            if (v instanceof Data_Maybe.Nothing) {
                                return {
                                    doc: Data_Monoid.mempty(Tidy_Doc.monoidFormatDoc),
                                    sep: DeclGroupSame.value,
                                    group: k(decl),
                                    decls: Data_List_NonEmpty.singleton(decl)
                                };
                            };
                            if (v instanceof Data_Maybe.Just) {
                                var group = k(decl);
                                var v1 = declSeparator(group)(v.value0.group);
                                if (v1 instanceof DeclGroupSame) {
                                    return {
                                        doc: v.value0.doc,
                                        sep: v.value0.sep,
                                        group: group,
                                        decls: Data_List_NonEmpty.cons(decl)(v.value0.decls)
                                    };
                                };
                                return {
                                    doc: joinDecls(v.value0),
                                    sep: v1,
                                    group: group,
                                    decls: Data_List_NonEmpty.singleton(decl)
                                };
                            };
                            throw new Error("Failed pattern match at Tidy (line 1358, column 22 - line 1379, column 12): " + [ v.constructor.name ]);
                        })($982));
                    };
                };
                var $983 = Data_Maybe.maybe(Data_Monoid.mempty(Tidy_Doc.monoidFormatDoc))(joinDecls);
                var $984 = Data_Foldable.foldr(Data_Foldable.foldableArray)(go)(Data_Maybe.Nothing.value);
                return function ($985) {
                    return $983($984($985));
                };
            };
        };
    };
};
var formatComment = function (lineComment) {
    return function (blockComment) {
        return function (com) {
            return function (next) {
                if (com instanceof PureScript_CST_Types.Comment) {
                    if (Data_String_CodeUnits.take(2)(com.value0) === "--") {
                        return lineComment(com.value0)(next);
                    };
                    if (Data_Boolean.otherwise) {
                        return blockComment(com.value0)(next);
                    };
                };
                if (com instanceof PureScript_CST_Types.Line) {
                    return Tidy_Doc.sourceBreak(com.value1)(next);
                };
                if (com instanceof PureScript_CST_Types.Space) {
                    return next;
                };
                throw new Error("Failed pattern match at Tidy (line 146, column 51 - line 155, column 9): " + [ com.constructor.name ]);
            };
        };
    };
};
var formatWithComments = function (leading) {
    return function (trailing) {
        return function (doc) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(formatComment(Tidy_Doc.leadingLineComment)(Tidy_Doc.leadingBlockComment))(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(doc)(Data_Foldable.foldr(Data_Foldable.foldableArray)(formatComment(Tidy_Doc.trailingLineComment)(Tidy_Doc.trailingBlockComment))(Data_Monoid.mempty(Tidy_Doc.monoidFormatDoc))(trailing)))(leading);
        };
    };
};
var formatToken = function (conf) {
    return function (tok) {
        var tokStr = Tidy_Token.printToken(conf.unicode)(tok.value);
        var tokDoc = (function () {
            if (tok.value instanceof PureScript_CST_Types.TokRawString) {
                return formatRawString(tokStr);
            };
            if (tok.value instanceof PureScript_CST_Types.TokString) {
                return formatString(tokStr);
            };
            return Tidy_Doc.text(tokStr);
        })();
        return formatWithComments(tok.leadingComments)(tok.trailingComments)(tokDoc);
    };
};
var formatEmptyList = function (conf) {
    return function (v) {
        return Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(formatToken(conf)(v.open))(formatToken(conf)(v.close));
    };
};
var formatErrorRecoveredError = {
    formatError: function (v) {
        var goComments = function (ind) {
            return function (acc) {
                return function (v1) {
                    if (v1 instanceof PureScript_CST_Types.Comment) {
                        if (Data_String_CodeUnits.take(2)(v1.value0) === "--") {
                            return {
                                line: false,
                                doc: Data_Semigroup.append(Dodo_Internal.semigroupDoc)(acc.doc)(Dodo.text(v1.value0))
                            };
                        };
                        if (Data_Boolean.otherwise) {
                            return {
                                line: false,
                                doc: Data_Semigroup.append(Dodo_Internal.semigroupDoc)(acc.doc)(Dodo.lines(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(Dodo.text)(Tidy_Util.splitLines(v1.value0))))
                            };
                        };
                    };
                    if (v1 instanceof PureScript_CST_Types.Line) {
                        return {
                            line: true,
                            doc: Data_Semigroup.append(Dodo_Internal.semigroupDoc)(acc.doc)(Data_Monoid.power(Dodo_Internal.monoidDoc)(Dodo["break"])(v1.value1))
                        };
                    };
                    if (v1 instanceof PureScript_CST_Types.Space) {
                        if (acc.line) {
                            return {
                                line: false,
                                doc: Data_Semigroup.append(Dodo_Internal.semigroupDoc)(acc.doc)(Dodo.text(Data_Monoid.power(Data_Monoid.monoidString)(" ")(Data_Ord.max(Data_Ord.ordInt)(0)(v1.value0 - ind | 0))))
                            };
                        };
                        if (Data_Boolean.otherwise) {
                            return {
                                line: false,
                                doc: Data_Semigroup.append(Dodo_Internal.semigroupDoc)(acc.doc)(Dodo.text(Data_Monoid.power(Data_Monoid.monoidString)(" ")(v1.value0)))
                            };
                        };
                    };
                    throw new Error("Failed pattern match at Tidy (line 121, column 26 - line 133, column 69): " + [ v1.constructor.name ]);
                };
            };
        };
        var formatRecoveredComments = function (ind) {
            var $986 = Data_Foldable.foldl(Data_Foldable.foldableArray)(goComments(ind))({
                line: false,
                doc: Data_Monoid.mempty(Dodo_Internal.monoidDoc)
            });
            return function ($987) {
                return (function (v1) {
                    return v1.doc;
                })($986($987));
            };
        };
        var v1 = Data_Array.uncons(v.tokens);
        if (v1 instanceof Data_Maybe.Just) {
            var v2 = Data_Array.unsnoc(v1.value0.tail);
            if (v2 instanceof Data_Maybe.Just) {
                return formatWithComments(v1.value0.head.leadingComments)(v2.value0.last.trailingComments)(Tidy_Doc.fromDoc(Dodo.withPosition(function (v3) {
                    var last$prime = Data_Semigroup.append(Dodo_Internal.semigroupDoc)(formatRecoveredComments(v3.nextIndent)(v2.value0.last.leadingComments))(Dodo.text(Tidy_Token.printToken(Tidy_Token.UnicodeSource.value)(v2.value0.last.value)));
                    var init$prime = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Dodo_Internal.monoidDoc)(function (tok) {
                        return Data_Semigroup.append(Dodo_Internal.semigroupDoc)(formatRecoveredComments(v3.nextIndent)(tok.leadingComments))(Data_Semigroup.append(Dodo_Internal.semigroupDoc)(Dodo.text(Tidy_Token.printToken(Tidy_Token.UnicodeSource.value)(tok.value)))(formatRecoveredComments(v3.nextIndent)(tok.trailingComments)));
                    })(v2.value0.init);
                    var head$prime = Data_Semigroup.append(Dodo_Internal.semigroupDoc)(Dodo.text(Tidy_Token.printToken(Tidy_Token.UnicodeSource.value)(v1.value0.head.value)))(formatRecoveredComments(v3.nextIndent)(v1.value0.head.trailingComments));
                    return Data_Semigroup.append(Dodo_Internal.semigroupDoc)(head$prime)(Data_Semigroup.append(Dodo_Internal.semigroupDoc)(init$prime)(last$prime));
                })));
            };
            if (v2 instanceof Data_Maybe.Nothing) {
                return formatToken({
                    unicode: Tidy_Token.UnicodeSource.value
                })(v1.value0.head);
            };
            throw new Error("Failed pattern match at Tidy (line 94, column 9 - line 113, column 56): " + [ v2.constructor.name ]);
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return Data_Monoid.mempty(Tidy_Doc.monoidFormatDoc);
        };
        throw new Error("Failed pattern match at Tidy (line 92, column 5 - line 115, column 15): " + [ v1.constructor.name ]);
    }
};
var formatListTail = function (alignment) {
    return function (format) {
        return function (conf) {
            return Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc.softBreak)(function (v) {
                return Tidy_Doc.space(formatToken(conf)(v.value0))(formatListElem(alignment)(format)(conf)(v.value1));
            });
        };
    };
};
var formatList = function (openSpace) {
    return function (closeSpace) {
        return function (alignment) {
            return function (grouped) {
                return function (format) {
                    return function (conf) {
                        return function (v) {
                            var listElems = closeSpace(Tidy_Doc.softBreak(formatListElem(alignment)(format)(conf)(v.head))(formatListTail(alignment)(format)(conf)(v.tail)))(formatToken(conf)(v.close));
                            if (grouped instanceof Grouped) {
                                return Tidy_Doc.flexGroup(openSpace(formatToken(conf)(v.open))(listElems));
                            };
                            if (grouped instanceof NotGrouped) {
                                return openSpace(formatToken(conf)(v.open))(listElems);
                            };
                            throw new Error("Failed pattern match at Tidy (line 1228, column 3 - line 1234, column 30): " + [ grouped.constructor.name ]);
                        };
                    };
                };
            };
        };
    };
};
var formatDelimited = function (openSpace) {
    return function (closeSpace) {
        return function (alignment) {
            return function (grouped) {
                return function (format) {
                    return function (conf) {
                        return function (v) {
                            if (v.value instanceof Data_Maybe.Nothing) {
                                return formatEmptyList(conf)({
                                    open: v.open,
                                    close: v.close
                                });
                            };
                            if (v.value instanceof Data_Maybe.Just) {
                                return formatList(openSpace)(closeSpace)(alignment)(grouped)(format)(conf)({
                                    open: v.open,
                                    head: v.value.value0.head,
                                    tail: v.value.value0.tail,
                                    close: v.close
                                });
                            };
                            throw new Error("Failed pattern match at Tidy (line 1204, column 103 - line 1208, column 94): " + [ v.value.constructor.name ]);
                        };
                    };
                };
            };
        };
    };
};
var formatParenList = formatDelimited(Tidy_Doc.softSpace)(Tidy_Doc.softBreak)(2);
var formatDelimitedNonEmpty = function (openSpace) {
    return function (closeSpace) {
        return function (alignment) {
            return function (grouped) {
                return function (format) {
                    return function (conf) {
                        return function (v) {
                            return formatList(openSpace)(closeSpace)(alignment)(grouped)(format)(conf)({
                                open: v.open,
                                head: v.value.head,
                                tail: v.value.tail,
                                close: v.close
                            });
                        };
                    };
                };
            };
        };
    };
};
var formatParenListNonEmpty = formatDelimitedNonEmpty(Tidy_Doc.softSpace)(Tidy_Doc.softBreak)(2);
var formatOneOrDelimited = function (format) {
    return function (conf) {
        return function (v) {
            if (v instanceof PureScript_CST_Types.One) {
                return format(conf)(v.value0);
            };
            if (v instanceof PureScript_CST_Types.Many) {
                return formatParenListNonEmpty(NotGrouped.value)(format)(conf)(v.value0);
            };
            throw new Error("Failed pattern match at Tidy (line 588, column 36 - line 590, column 63): " + [ v.constructor.name ]);
        };
    };
};
var formatName = function (conf) {
    return function (v) {
        return formatToken(conf)(v.token);
    };
};
var formatDataMembers = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.DataAll) {
            return formatToken(conf)(v.value0);
        };
        if (v instanceof PureScript_CST_Types.DataEnumerated) {
            return formatParenList(NotGrouped.value)(formatName)(conf)(v.value0);
        };
        throw new Error("Failed pattern match at Tidy (line 280, column 26 - line 284, column 50): " + [ v.constructor.name ]);
    };
};
var formatExport = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.ExportValue) {
            return formatName(conf)(v.value0);
        };
        if (v instanceof PureScript_CST_Types.ExportOp) {
            return formatName(conf)(v.value0);
        };
        if (v instanceof PureScript_CST_Types.ExportType) {
            return Tidy_Doc.flexGroup(Tidy_Doc.softBreak(formatName(conf)(v.value0))(Tidy_Doc.indent(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatDataMembers(conf))(v.value1))));
        };
        if (v instanceof PureScript_CST_Types.ExportTypeOp) {
            return Tidy_Doc.space(formatToken(conf)(v.value0))(Tidy_Doc.anchor(formatName(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.ExportClass) {
            return Tidy_Doc.space(formatToken(conf)(v.value0))(Tidy_Doc.anchor(formatName(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.ExportKind) {
            return Tidy_Doc.space(formatToken(conf)(v.value0))(Tidy_Doc.anchor(formatName(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.ExportModule) {
            return Tidy_Doc.space(formatToken(conf)(v.value0))(Tidy_Doc.anchor(formatName(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.ExportError) {
            return conf.formatError(v.value0);
        };
        throw new Error("Failed pattern match at Tidy (line 261, column 21 - line 277, column 23): " + [ v.constructor.name ]);
    };
};
var formatFundep = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.FundepDetermined) {
            return Tidy_Doc.space(formatToken(conf)(v.value0))(Tidy_Doc.joinWithMap(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Tidy_Doc.space)(formatName(conf))(v.value1));
        };
        if (v instanceof PureScript_CST_Types.FundepDetermines) {
            return Tidy_Doc.space(Tidy_Doc.space(Tidy_Doc.joinWithMap(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Tidy_Doc.space)(formatName(conf))(v.value0))(formatToken(conf)(v.value1)))(Tidy_Doc.joinWithMap(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Tidy_Doc.space)(formatName(conf))(v.value2));
        };
        throw new Error("Failed pattern match at Tidy (line 578, column 21 - line 585, column 57): " + [ v.constructor.name ]);
    };
};
var formatImport = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.ImportValue) {
            return formatName(conf)(v.value0);
        };
        if (v instanceof PureScript_CST_Types.ImportOp) {
            return formatName(conf)(v.value0);
        };
        if (v instanceof PureScript_CST_Types.ImportType) {
            return Tidy_Doc.flexGroup(Tidy_Doc.softBreak(formatName(conf)(v.value0))(Tidy_Doc.indent(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatDataMembers(conf))(v.value1))));
        };
        if (v instanceof PureScript_CST_Types.ImportTypeOp) {
            return Tidy_Doc.space(formatToken(conf)(v.value0))(Tidy_Doc.anchor(formatName(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.ImportClass) {
            return Tidy_Doc.space(formatToken(conf)(v.value0))(Tidy_Doc.anchor(formatName(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.ImportKind) {
            return Tidy_Doc.space(formatToken(conf)(v.value0))(Tidy_Doc.anchor(formatName(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.ImportError) {
            return conf.formatError(v.value0);
        };
        throw new Error("Failed pattern match at Tidy (line 362, column 21 - line 376, column 23): " + [ v.constructor.name ]);
    };
};
var formatImportDecl = function (conf) {
    return function (v) {
        var formatImportQualified = function (v1) {
            return Tidy_Doc.space(formatToken(conf)(v1.value0))(Tidy_Doc.anchor(formatName(conf)(v1.value1)));
        };
        var importDeclBody = (function () {
            if (v.names instanceof Data_Maybe.Just && v.names.value0.value0 instanceof Data_Maybe.Just) {
                return Tidy_Doc.space(Tidy_Doc.flexSpaceBreak(Tidy_Doc.space(formatName(conf)(v.module))(Tidy_Doc.anchor(formatToken(conf)(v.names.value0.value0.value0))))(Tidy_Doc.anchor(formatParenListNonEmpty(NotGrouped.value)(formatImport)(conf)(v.names.value0.value1))))(Tidy_Doc.anchor(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatImportQualified)(v.qualified)));
            };
            if (v.names instanceof Data_Maybe.Just && v.names.value0.value0 instanceof Data_Maybe.Nothing) {
                return Tidy_Doc.space(Tidy_Doc.flexSpaceBreak(formatName(conf)(v.module))(Tidy_Doc.anchor(formatParenListNonEmpty(NotGrouped.value)(formatImport)(conf)(v.names.value0.value1))))(Tidy_Doc.anchor(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatImportQualified)(v.qualified)));
            };
            if (v.names instanceof Data_Maybe.Nothing) {
                return Tidy_Doc.space(formatName(conf)(v.module))(Tidy_Doc.anchor(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatImportQualified)(v.qualified)));
            };
            throw new Error("Failed pattern match at Tidy (line 290, column 20 - line 302, column 69): " + [ v.names.constructor.name ]);
        })();
        return Tidy_Doc.space(formatToken(conf)(v.keyword))(Tidy_Doc.indent(Tidy_Doc.anchor(importDeclBody)));
    };
};
var formatParens = function (format) {
    return function (conf) {
        return function (v) {
            return Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(formatToken(conf)(v.open))(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(Tidy_Doc.anchor(format(conf)(v.value)))(formatToken(conf)(v.close)));
        };
    };
};
var formatParensBlock = function (format) {
    return function (conf) {
        return function (v) {
            return Tidy_Doc.flexGroup(Tidy_Doc.softSpace(formatToken(conf)(v.open))(Tidy_Doc.softBreak(Tidy_Doc.align(2)(Tidy_Doc.anchor(format(conf)(v.value))))(formatToken(conf)(v.close))));
        };
    };
};
var formatQualifiedName = function (conf) {
    return function (v) {
        return formatToken(conf)(v.token);
    };
};
var formatBasicListNonEmpty = formatDelimitedNonEmpty(Tidy_Doc.space)(Tidy_Doc.spaceBreak)(2);
var formatBasicList = formatDelimited(Tidy_Doc.space)(Tidy_Doc.spaceBreak)(2);
var flatten = (function () {
    var format = function (v) {
        return Tidy_Doc.space(v.head)(Tidy_Doc.indent(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc.space)(Tidy_Doc.anchor)(v.tail)));
    };
    var $988 = Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(format);
    return function ($989) {
        return $988(Data_Array.uncons($989));
    };
})();
var formatTypeVarBinding = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.TypeVarKinded) {
            return formatParensBlock(formatKindedTypeVarBinding)(conf)(v.value0);
        };
        if (v instanceof PureScript_CST_Types.TypeVarName) {
            return formatName(conf)(v.value0);
        };
        throw new Error("Failed pattern match at Tidy (line 628, column 29 - line 632, column 22): " + [ v.constructor.name ]);
    };
};
var formatType = function (conf) {
    var $990 = formatHangingType(conf);
    return function ($991) {
        return Tidy_Hang.toFormatDoc($990($991));
    };
};
var formatRowLabeled = function (conf) {
    return function (v) {
        return Tidy_Doc.space(formatName(conf)(v.label))(Tidy_Doc.indent(Tidy_Doc.flexSpaceBreak(Tidy_Doc.anchor(formatToken(conf)(v.separator)))(Tidy_Doc.anchor(formatType(conf)(v.value)))));
    };
};
var formatRow = function (openSpace) {
    return function (closeSpace) {
        return function (conf) {
            return function (v) {
                if (v.value.labels instanceof Data_Maybe.Nothing && v.value.tail instanceof Data_Maybe.Nothing) {
                    return formatEmptyList(conf)({
                        open: v.open,
                        close: v.close
                    });
                };
                if (v.value.labels instanceof Data_Maybe.Just && v.value.tail instanceof Data_Maybe.Nothing) {
                    return formatDelimitedNonEmpty(openSpace)(closeSpace)(2)(Grouped.value)(formatRowLabeled)(conf)({
                        open: v.open,
                        value: v.value.labels.value0,
                        close: v.close
                    });
                };
                if (v.value.labels instanceof Data_Maybe.Nothing && v.value.tail instanceof Data_Maybe.Just) {
                    return closeSpace(openSpace(formatToken(conf)(v.open))(flatten([ formatToken(conf)(v.value.tail.value0.value0), formatType(conf)(v.value.tail.value0.value1) ])))(formatToken(conf)(v.close));
                };
                if (v.value.labels instanceof Data_Maybe.Just && v.value.tail instanceof Data_Maybe.Just) {
                    return closeSpace(Tidy_Doc.spaceBreak(Tidy_Doc.softBreak(openSpace(formatToken(conf)(v.open))(formatListElem(2)(formatRowLabeled)(conf)(v.value.labels.value0.head)))(formatListTail(2)(formatRowLabeled)(conf)(v.value.labels.value0.tail)))(Tidy_Doc.space(formatToken(conf)(v.value.tail.value0.value0))(formatListElem(2)(formatType)(conf)(v.value.tail.value0.value1))))(formatToken(conf)(v.close));
                };
                throw new Error("Failed pattern match at Tidy (line 804, column 94 - line 827, column 31): " + [ v.value.labels.constructor.name, v.value.tail.constructor.name ]);
            };
        };
    };
};
var formatMonotype = function (conf) {
    var $992 = formatHangingMonotype(conf);
    return function ($993) {
        return Tidy_Hang.toFormatDoc($992($993));
    };
};
var formatKindedTypeVarBinding = function (conf) {
    return function (v) {
        return Tidy_Doc.space(formatName(conf)(v.label))(Tidy_Doc.indent(Tidy_Doc.flexSpaceBreak(Tidy_Doc.anchor(formatToken(conf)(v.separator)))(formatType(conf)(v.value))));
    };
};
var formatHangingType = function (conf) {
    var $994 = formatHangingPolytype(Control_Category.identity(Control_Category.categoryFn))(conf);
    return function ($995) {
        return $994(toPolytype($995));
    };
};
var formatHangingPolytype = function (ind) {
    return function (conf) {
        return function (v) {
            if (Data_Array["null"](v.init)) {
                return formatHangingMonotype(conf)(v.last);
            };
            if (conf.typeArrowPlacement instanceof TypeArrowFirst) {
                var isUnicodeArrow = (function () {
                    if (conf.unicode instanceof Tidy_Token.UnicodeAlways) {
                        return Data_Function["const"](true);
                    };
                    if (conf.unicode instanceof Tidy_Token.UnicodeNever) {
                        return Data_Function["const"](false);
                    };
                    if (conf.unicode instanceof Tidy_Token.UnicodeSource) {
                        return function (v1) {
                            if (v1 instanceof PolyArrow && (v1.value1.value instanceof PureScript_CST_Types.TokRightArrow && v1.value1.value.value0 instanceof PureScript_CST_Types.Unicode)) {
                                return true;
                            };
                            if (v1 instanceof PolyArrow && (v1.value1.value instanceof PureScript_CST_Types.TokRightFatArrow && v1.value1.value.value0 instanceof PureScript_CST_Types.Unicode)) {
                                return true;
                            };
                            if (v1 instanceof PolyForall && (v1.value0.value instanceof PureScript_CST_Types.TokForall && v1.value0.value.value0 instanceof PureScript_CST_Types.Unicode)) {
                                return true;
                            };
                            return false;
                        };
                    };
                    throw new Error("Failed pattern match at Tidy (line 758, column 22 - line 768, column 21): " + [ conf.unicode.constructor.name ]);
                })();
                var isUnicode = Data_Array.all(isUnicodeArrow)(v.init);
                var formatPolyArrowFirst = function (k) {
                    return function (v1) {
                        if (v1 instanceof PolyForall) {
                            var go = function (doc) {
                                return function (tyVar) {
                                    return Tidy_Doc.flexSpaceBreak(doc)(Tidy_Doc.indent(formatTypeVarBinding(conf)(tyVar)));
                                };
                            };
                            return function (doc) {
                                return Tidy_Doc.space(Tidy_Doc.softBreak(k(Data_Foldable.foldl(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(go)(formatToken(conf)(v1.value0))(v1.value1)))(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(Data_Monoid.guard(Tidy_Doc.monoidFormatDoc)(!isUnicode)(Tidy_Doc.fromDoc(Dodo.flexAlt(Data_Monoid.mempty(Dodo_Internal.monoidDoc))(Dodo.space))))(Tidy_Doc.anchor(formatToken(conf)(v1.value2)))))(Tidy_Doc.anchor(Tidy_Doc.alignCurrentColumn(doc)));
                            };
                        };
                        if (v1 instanceof PolyArrow) {
                            return function (doc) {
                                return Tidy_Doc.space(Tidy_Doc.spaceBreak(k(Tidy_Doc.flexGroup(formatMonotype(conf)(v1.value0))))(Tidy_Doc.anchor(formatToken(conf)(v1.value1))))(Tidy_Doc.anchor(Tidy_Doc.alignCurrentColumn(doc)));
                            };
                        };
                        throw new Error("Failed pattern match at Tidy (line 770, column 30 - line 786, column 52): " + [ v1.constructor.name ]);
                    };
                };
                return Tidy_Hang.hangBreak(Data_Foldable.foldl(Data_Foldable.foldableArray)(formatPolyArrowFirst)(ind)(v.init)(Tidy_Doc.anchor(formatMonotype(conf)(v.last))));
            };
            if (conf.typeArrowPlacement instanceof TypeArrowLast) {
                var formatPolyArrowLast = function (v1) {
                    if (v1 instanceof PolyForall) {
                        var go = function (doc) {
                            return function (tyVar) {
                                return Tidy_Doc.flexSpaceBreak(doc)(Tidy_Doc.indent(formatTypeVarBinding(conf)(tyVar)));
                            };
                        };
                        return Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(Data_Foldable.foldl(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(go)(formatToken(conf)(v1.value0))(v1.value1))(Tidy_Doc.indent(Tidy_Doc.anchor(formatToken(conf)(v1.value2))));
                    };
                    if (v1 instanceof PolyArrow) {
                        return Tidy_Doc.space(Tidy_Doc.flexGroup(formatType(conf)(v1.value0)))(Tidy_Doc.indent(Tidy_Doc.anchor(formatToken(conf)(v1.value1))));
                    };
                    throw new Error("Failed pattern match at Tidy (line 792, column 27 - line 801, column 57): " + [ v1.constructor.name ]);
                };
                return Tidy_Hang.hangBreak(Tidy_Doc.spaceBreak(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc.spaceBreak)(formatPolyArrowLast)(v.init))(Tidy_Doc.flexGroup(formatMonotype(conf)(v.last))));
            };
            throw new Error("Failed pattern match at Tidy (line 751, column 49 - line 801, column 57): " + [ conf.typeArrowPlacement.constructor.name ]);
        };
    };
};
var formatHangingMonotype = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.TypeVar) {
            return Tidy_Hang.hangBreak(formatName(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.TypeConstructor) {
            return Tidy_Hang.hangBreak(formatQualifiedName(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.TypeWildcard) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.TypeHole) {
            return Tidy_Hang.hangBreak(formatName(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.TypeString) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.TypeArrowName) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.TypeOpName) {
            return Tidy_Hang.hangBreak(formatQualifiedName(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.TypeRow) {
            return Tidy_Hang.hangBreak(formatRow(Tidy_Doc.softSpace)(Tidy_Doc.softBreak)(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.TypeRecord) {
            return Tidy_Hang.hangBreak(formatRow(Tidy_Doc.space)(Tidy_Doc.spaceBreak)(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.TypeApp) {
            return Tidy_Hang.hangApp(formatHangingType(conf)(v.value0))(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(formatHangingType(conf))(v.value1));
        };
        if (v instanceof PureScript_CST_Types.TypeParens) {
            return Tidy_Hang.hangBreak(formatParensBlock(formatType)(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.TypeUnaryRow) {
            return Tidy_Hang.hangBreak(Tidy_Doc.space(formatToken(conf)(v.value0))(formatType(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.TypeKinded) {
            return Tidy_Hang.hangBreak(Tidy_Doc.space(formatType(conf)(v.value0))(Tidy_Doc.indent(Tidy_Doc.flexSpaceBreak(Tidy_Doc.anchor(formatToken(conf)(v.value1)))(Tidy_Doc.anchor(formatType(conf)(v.value2))))));
        };
        if (v instanceof PureScript_CST_Types.TypeOp) {
            return formatHangingOperatorTree(formatQualifiedName)(formatHangingType)(conf)(toQualifiedOperatorTree(conf.operators)(Tidy_Precedence.OperatorType.value)(v.value0)(v.value1));
        };
        if (v instanceof PureScript_CST_Types["TypeError"]) {
            return Tidy_Hang.hangBreak(conf.formatError(v.value0));
        };
        if (v instanceof PureScript_CST_Types.TypeArrow) {
            return Partial_Unsafe.unsafeCrashWith("formatMonotype: TypeArrow handled by formatPolytype");
        };
        if (v instanceof PureScript_CST_Types.TypeConstrained) {
            return Partial_Unsafe.unsafeCrashWith("formatMonotype: TypeConstrained handled by formatPolytype");
        };
        if (v instanceof PureScript_CST_Types.TypeForall) {
            return Partial_Unsafe.unsafeCrashWith("formatMonotype: TypeForall handled by formatPolytype");
        };
        throw new Error("Failed pattern match at Tidy (line 680, column 30 - line 720, column 75): " + [ v.constructor.name ]);
    };
};
var formatHangingDataCtor = function (conf) {
    return function (v) {
        var hangingName = Tidy_Hang.hangBreak(formatName(conf)(v.name));
        var v1 = Data_Array_NonEmpty.fromArray(v.fields);
        if (v1 instanceof Data_Maybe.Nothing) {
            return hangingName;
        };
        if (v1 instanceof Data_Maybe.Just) {
            return Tidy_Hang.hangApp(hangingName)(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(formatHangingType(conf))(v1.value0));
        };
        throw new Error("Failed pattern match at Tidy (line 530, column 3 - line 532, column 69): " + [ v1.constructor.name ]);
    };
};
var formatDataCtor = function (conf) {
    var $996 = formatHangingDataCtor(conf);
    return function ($997) {
        return Tidy_Hang.toFormatDoc($996($997));
    };
};
var formatConstraints = function (conf) {
    return function (v) {
        var unicodeArr = (function () {
            if (v.value1.value instanceof PureScript_CST_Types.TokOperator && (v.value1.value.value0 instanceof Data_Maybe.Nothing && (v.value1.value.value1 === "<=" && Data_Eq.eq(Tidy_Token.eqUnicodeOption)(conf.unicode)(Tidy_Token.UnicodeAlways.value)))) {
                return {
                    value: new PureScript_CST_Types.TokOperator(Data_Maybe.Nothing.value, "\u21d0"),
                    leadingComments: v.value1.leadingComments,
                    range: v.value1.range,
                    trailingComments: v.value1.trailingComments
                };
            };
            if (v.value1.value instanceof PureScript_CST_Types.TokOperator && (v.value1.value.value0 instanceof Data_Maybe.Nothing && (v.value1.value.value1 === "\u21d0" && Data_Eq.eq(Tidy_Token.eqUnicodeOption)(conf.unicode)(Tidy_Token.UnicodeNever.value)))) {
                return {
                    value: new PureScript_CST_Types.TokOperator(Data_Maybe.Nothing.value, "<="),
                    leadingComments: v.value1.leadingComments,
                    range: v.value1.range,
                    trailingComments: v.value1.trailingComments
                };
            };
            return v.value1;
        })();
        return Tidy_Doc.space(formatOneOrDelimited(formatType)(conf)(v.value0))(Tidy_Doc.anchor(formatToken(conf)(unicodeArr)));
    };
};
var formatInstanceHead = function (conf) {
    return function (v) {
        var hdTypes = Tidy_Doc.spaceBreak(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatConstraints(conf))(v.value0.constraints))(Tidy_Doc.flexGroup(Tidy_Doc.space(formatQualifiedName(conf)(v.value0.className))(Tidy_Doc.indent(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc.spaceBreak)(formatType(conf))(v.value0.types)))));
        if (v.value0.name instanceof Data_Maybe.Just) {
            return Tidy_Doc.space(Tidy_Doc.flexSpaceBreak(Tidy_Doc.space(Tidy_Doc.space(formatToken(conf)(v.value0.keyword))(Tidy_Doc.anchor(formatName(conf)(v.value0.name.value0.value0))))(Tidy_Doc.anchor(formatToken(conf)(v.value0.name.value0.value1))))(Tidy_Doc.indent(hdTypes)))(Tidy_Doc.indent(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatToken(conf))(v.value1)));
        };
        if (v.value0.name instanceof Data_Maybe.Nothing) {
            return Tidy_Doc.space(Tidy_Doc.flexSpaceBreak(formatToken(conf)(v.value0.keyword))(Tidy_Doc.indent(hdTypes)))(Tidy_Doc.indent(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatToken(conf))(v.value1)));
        };
        throw new Error("Failed pattern match at Tidy (line 602, column 3 - line 612, column 57): " + [ v.value0.name.constructor.name ]);
    };
};
var formatClassHead = function (conf) {
    return function (v) {
        var formatFundeps = function (v1) {
            return Tidy_Doc.softBreak(Tidy_Doc.space(formatToken(conf)(v1.value0))(formatListElem(2)(formatFundep)(conf)(v1.value1.head)))(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc.softBreak)(function (v2) {
                return Tidy_Doc.space(formatToken(conf)(v2.value0))(formatListElem(2)(formatFundep)(conf)(v2.value1));
            })(v1.value1.tail));
        };
        return Tidy_Doc.flexSpaceBreak(formatToken(conf)(v.value0.keyword))(Tidy_Doc.indent(Tidy_Doc.space(Tidy_Doc.spaceBreak(Tidy_Doc.spaceBreak(Tidy_Doc.anchor(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatConstraints(conf))(v["value0"]["super"])))(Tidy_Doc.flexGroup(Tidy_Doc.spaceBreak(formatName(conf)(v.value0.name))(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc.spaceBreak)((function () {
            var $998 = formatTypeVarBinding(conf);
            return function ($999) {
                return Tidy_Doc.indent($998($999));
            };
        })())(v.value0.vars)))))(Tidy_Doc.flexGroup(Tidy_Doc.anchor(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatFundeps)(v.value0.fundeps)))))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatToken(conf))(v.value1))));
    };
};
var formatDataHead = function (conf) {
    return function (v) {
        return Tidy_Doc.space(formatToken(conf)(v.keyword))(Tidy_Doc.indent(Tidy_Doc.flexSpaceBreak(Tidy_Doc.anchor(formatName(conf)(v.name)))(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc.spaceBreak)(formatTypeVarBinding(conf))(v.vars))));
    };
};
var formatSignature = function (conf) {
    return function (v) {
        if (conf.typeArrowPlacement instanceof TypeArrowFirst) {
            var polytype = toPolytype(v.value);
            var isUnicode = (function () {
                if (conf.unicode instanceof Tidy_Token.UnicodeAlways) {
                    return true;
                };
                if (conf.unicode instanceof Tidy_Token.UnicodeNever) {
                    return false;
                };
                if (conf.unicode instanceof Tidy_Token.UnicodeSource) {
                    if (v.separator.value instanceof PureScript_CST_Types.TokDoubleColon && v.separator.value.value0 instanceof PureScript_CST_Types.Unicode) {
                        return true;
                    };
                    return false;
                };
                throw new Error("Failed pattern match at Tidy (line 663, column 19 - line 669, column 23): " + [ conf.unicode.constructor.name ]);
            })();
            var width = (function () {
                if (isUnicode) {
                    return 2;
                };
                if (Data_Boolean.otherwise) {
                    return 3;
                };
                throw new Error("Failed pattern match at Tidy (line 659, column 7 - line 661, column 24): " + [  ]);
            })();
            var formattedPolytype = formatHangingPolytype(Tidy_Doc.align(width))(conf)(polytype);
            var $491 = Data_Array["null"](polytype.init);
            if ($491) {
                return Tidy_Doc.flexSpaceBreak(v.label)(Tidy_Doc.indent(Tidy_Doc.space(Tidy_Doc.anchor(formatToken(conf)(v.separator)))(Tidy_Doc.anchor(Tidy_Doc.align(width)(Tidy_Hang.toFormatDoc(formattedPolytype))))));
            };
            return Tidy_Doc.flexSpaceBreak(v.label)(Tidy_Doc.indent(Tidy_Doc.space(Tidy_Doc.anchor(formatToken(conf)(v.separator)))(Tidy_Doc.anchor(Tidy_Hang.toFormatDoc(formattedPolytype)))));
        };
        if (conf.typeArrowPlacement instanceof TypeArrowLast) {
            return Tidy_Doc.space(v.label)(Tidy_Doc.indent(Tidy_Doc.flexGroup(Tidy_Doc.spaceBreak(Tidy_Doc.anchor(formatToken(conf)(v.separator)))(Tidy_Doc.anchor(Tidy_Doc.flexGroup(formatType(conf)(v.value)))))));
        };
        throw new Error("Failed pattern match at Tidy (line 642, column 3 - line 674, column 66): " + [ conf.typeArrowPlacement.constructor.name ]);
    };
};
var eqTypeArrowOption = {
    eq: function (x) {
        return function (y) {
            if (x instanceof TypeArrowFirst && y instanceof TypeArrowFirst) {
                return true;
            };
            if (x instanceof TypeArrowLast && y instanceof TypeArrowLast) {
                return true;
            };
            return false;
        };
    }
};
var eqImportWrapOption = {
    eq: function (x) {
        return function (y) {
            if (x instanceof ImportWrapSource && y instanceof ImportWrapSource) {
                return true;
            };
            if (x instanceof ImportWrapAuto && y instanceof ImportWrapAuto) {
                return true;
            };
            return false;
        };
    }
};
var eqImportSortOpion = {
    eq: function (x) {
        return function (y) {
            if (x instanceof ImportSortSource && y instanceof ImportSortSource) {
                return true;
            };
            if (x instanceof ImportSortIde && y instanceof ImportSortIde) {
                return true;
            };
            return false;
        };
    }
};
var eqImportComparison = {
    eq: function (x) {
        return function (y) {
            if (x instanceof ImportClassCmp && y instanceof ImportClassCmp) {
                return Data_Eq.eq(PureScript_CST_Types.eqProper)(x.value0)(y.value0);
            };
            if (x instanceof ImportTypeOpCmp && y instanceof ImportTypeOpCmp) {
                return Data_Eq.eq(PureScript_CST_Types.eqOperator)(x.value0)(y.value0);
            };
            if (x instanceof ImportTypeCmp && y instanceof ImportTypeCmp) {
                return Data_Eq.eq(PureScript_CST_Types.eqProper)(x.value0)(y.value0) && x.value1 === y.value1 && Data_Eq.eq(Data_Eq.eqArray(PureScript_CST_Types.eqProper))(x.value2)(y.value2);
            };
            if (x instanceof ImportValueCmp && y instanceof ImportValueCmp) {
                return Data_Eq.eq(PureScript_CST_Types.eqIdent)(x.value0)(y.value0);
            };
            if (x instanceof ImportOpCmp && y instanceof ImportOpCmp) {
                return Data_Eq.eq(PureScript_CST_Types.eqOperator)(x.value0)(y.value0);
            };
            if (x instanceof ImportErrorCmp && y instanceof ImportErrorCmp) {
                return true;
            };
            return false;
        };
    }
};
var eqImportModuleComparison = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(PureScript_CST_Types.eqModuleName)(x.value0)(y.value0) && x.value1 === y.value1 && Data_Eq.eq(Data_Eq.eqArray(eqImportComparison))(x.value2)(y.value2) && Data_Eq.eq(Data_Maybe.eqMaybe(PureScript_CST_Types.eqModuleName))(x.value3)(y.value3);
        };
    }
};
var ordImportComparison = {
    compare: function (x) {
        return function (y) {
            if (x instanceof ImportClassCmp && y instanceof ImportClassCmp) {
                return Data_Ord.compare(PureScript_CST_Types.ordProper)(x.value0)(y.value0);
            };
            if (x instanceof ImportClassCmp) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof ImportClassCmp) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof ImportTypeOpCmp && y instanceof ImportTypeOpCmp) {
                return Data_Ord.compare(PureScript_CST_Types.ordOperator)(x.value0)(y.value0);
            };
            if (x instanceof ImportTypeOpCmp) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof ImportTypeOpCmp) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof ImportTypeCmp && y instanceof ImportTypeCmp) {
                var v = Data_Ord.compare(PureScript_CST_Types.ordProper)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                var v1 = Data_Ord.compare(Data_Ord.ordBoolean)(x.value1)(y.value1);
                if (v1 instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v1 instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(Data_Ord.ordArray(PureScript_CST_Types.ordProper))(x.value2)(y.value2);
            };
            if (x instanceof ImportTypeCmp) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof ImportTypeCmp) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof ImportValueCmp && y instanceof ImportValueCmp) {
                return Data_Ord.compare(PureScript_CST_Types.ordIdent)(x.value0)(y.value0);
            };
            if (x instanceof ImportValueCmp) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof ImportValueCmp) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof ImportOpCmp && y instanceof ImportOpCmp) {
                return Data_Ord.compare(PureScript_CST_Types.ordOperator)(x.value0)(y.value0);
            };
            if (x instanceof ImportOpCmp) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof ImportOpCmp) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof ImportErrorCmp && y instanceof ImportErrorCmp) {
                return Data_Ordering.EQ.value;
            };
            throw new Error("Failed pattern match at Tidy (line 359, column 1 - line 359, column 60): " + [ x.constructor.name, y.constructor.name ]);
        };
    },
    Eq0: function () {
        return eqImportComparison;
    }
};
var ordImportModuleComparison = {
    compare: function (x) {
        return function (y) {
            var v = Data_Ord.compare(PureScript_CST_Types.ordModuleName)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            var v1 = Data_Ord.compare(Data_Ord.ordInt)(x.value1)(y.value1);
            if (v1 instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v1 instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            var v2 = Data_Ord.compare(Data_Ord.ordArray(ordImportComparison))(x.value2)(y.value2);
            if (v2 instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v2 instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(Data_Maybe.ordMaybe(PureScript_CST_Types.ordModuleName))(x.value3)(y.value3);
        };
    },
    Eq0: function () {
        return eqImportModuleComparison;
    }
};
var sortImportsIde = function (v) {
    var toComparison = function (v1) {
        if (v1 instanceof PureScript_CST_Types.ImportValue) {
            return new ImportValueCmp(v1.value0.name);
        };
        if (v1 instanceof PureScript_CST_Types.ImportOp) {
            return new ImportOpCmp(v1.value0.name);
        };
        if (v1 instanceof PureScript_CST_Types.ImportType && v1.value1 instanceof Data_Maybe.Nothing) {
            return new ImportTypeCmp(v1.value0.name, true, [  ]);
        };
        if (v1 instanceof PureScript_CST_Types.ImportType && (v1.value1 instanceof Data_Maybe.Just && v1.value1.value0 instanceof PureScript_CST_Types.DataEnumerated)) {
            if (v1.value1.value0.value0.value instanceof Data_Maybe.Nothing) {
                return new ImportTypeCmp(v1.value0.name, true, [  ]);
            };
            if (v1.value1.value0.value0.value instanceof Data_Maybe.Just) {
                return new ImportTypeCmp(v1.value0.name, true, Data_Functor.map(Data_Functor.functorArray)((function () {
                    var $1000 = Data_Newtype.un()(PureScript_CST_Types.Name);
                    return function ($1001) {
                        return (function (v2) {
                            return v2.name;
                        })($1000($1001));
                    };
                })())(Data_Array.cons(v1.value1.value0.value0.value.value0.head)(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(v1.value1.value0.value0.value.value0.tail))));
            };
            throw new Error("Failed pattern match at Tidy (line 334, column 7 - line 338, column 104): " + [ v1.value1.value0.value0.value.constructor.name ]);
        };
        if (v1 instanceof PureScript_CST_Types.ImportType && (v1.value1 instanceof Data_Maybe.Just && v1.value1.value0 instanceof PureScript_CST_Types.DataAll)) {
            return new ImportTypeCmp(v1.value0.name, false, [  ]);
        };
        if (v1 instanceof PureScript_CST_Types.ImportTypeOp) {
            return new ImportTypeOpCmp(v1.value1.name);
        };
        if (v1 instanceof PureScript_CST_Types.ImportClass) {
            return new ImportClassCmp(v1.value1.name);
        };
        if (v1 instanceof PureScript_CST_Types.ImportKind) {
            return new ImportTypeCmp(v1.value1.name, true, [  ]);
        };
        if (v1 instanceof PureScript_CST_Types.ImportError) {
            return ImportErrorCmp.value;
        };
        throw new Error("Failed pattern match at Tidy (line 326, column 18 - line 348, column 21): " + [ v1.constructor.name ]);
    };
    var v1 = Data_Array.unzip(v.value.tail);
    var v2 = Data_Array_NonEmpty.unzip(Data_Array_NonEmpty.sortWith(ordImportComparison)(Data_Tuple.fst)(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(Control_Bind.bindFlipped(Control_Bind.bindFn)(Data_Tuple.Tuple.create)(toComparison))(Data_Array_NonEmpty["cons'"](v.value.head)(v1.value1))));
    return new Data_Tuple.Tuple(Data_Array_NonEmpty.toArray(v2.value0), {
        open: v.open,
        value: {
            head: Data_Array_NonEmpty.head(v2.value1),
            tail: Data_Array.zip(v1.value0)(Data_Array_NonEmpty.tail(v2.value1))
        },
        close: v.close
    });
};
var defaultFormatOptions = function (dictFormatError) {
    return {
        formatError: formatError(dictFormatError),
        unicode: Tidy_Token.UnicodeSource.value,
        typeArrowPlacement: TypeArrowFirst.value,
        operators: Data_Map_Internal.empty,
        importSort: ImportSortSource.value,
        importWrap: ImportWrapSource.value
    };
};
var declareHanging = function (label) {
    return function (spc) {
        return function (separator) {
            return function (value) {
                return spc(label)(Tidy_Hang.toFormatDoc(Tidy_Hang.hang(Tidy_Doc.indent(separator))(value)));
            };
        };
    };
};
var formatRecordLabeled = function (format) {
    return function (conf) {
        return function (v) {
            if (v instanceof PureScript_CST_Types.RecordPun) {
                return formatName(conf)(v.value0);
            };
            if (v instanceof PureScript_CST_Types.RecordField) {
                return declareHanging(formatName(conf)(v.value0))(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc))(Tidy_Doc.anchor(formatToken(conf)(v.value1)))(format(conf)(v.value2));
            };
            throw new Error("Failed pattern match at Tidy (line 1160, column 35 - line 1164, column 106): " + [ v.constructor.name ]);
        };
    };
};
var formatHangingBinder = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.BinderWildcard) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.BinderVar) {
            return Tidy_Hang.hangBreak(formatName(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.BinderNamed) {
            return Tidy_Hang.hangBreak(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(formatName(conf)(v.value0))(Tidy_Doc.flexSoftBreak(Tidy_Doc.anchor(formatToken(conf)(v.value1)))(Tidy_Doc.indent(formatBinder(conf)(v.value2)))));
        };
        if (v instanceof PureScript_CST_Types.BinderConstructor) {
            var ctorName = Tidy_Hang.hangBreak(formatQualifiedName(conf)(v.value0));
            var v1 = Data_Array_NonEmpty.fromArray(v.value1);
            if (v1 instanceof Data_Maybe.Nothing) {
                return ctorName;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return Tidy_Hang.hangApp(ctorName)(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(formatHangingBinder(conf))(v1.value0));
            };
            throw new Error("Failed pattern match at Tidy (line 1126, column 5 - line 1130, column 67): " + [ v1.constructor.name ]);
        };
        if (v instanceof PureScript_CST_Types.BinderBoolean) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.BinderChar) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.BinderString) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.BinderInt) {
            return Tidy_Hang.hangBreak(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatToken(conf))(v.value0))(formatToken(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.BinderNumber) {
            return Tidy_Hang.hangBreak(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatToken(conf))(v.value0))(formatToken(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.BinderArray) {
            return Tidy_Hang.hangBreak(formatBasicList(Grouped.value)(formatBinder)(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.BinderRecord) {
            return Tidy_Hang.hangBreak(formatBasicList(Grouped.value)(formatRecordLabeled(formatHangingBinder))(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.BinderParens) {
            return Tidy_Hang.hangBreak(formatParensBlock(formatBinder)(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.BinderTyped) {
            return Tidy_Hang.hangBreak(formatSignature(conf)({
                label: formatBinder(conf)(v.value0),
                separator: v.value1,
                value: v.value2
            }));
        };
        if (v instanceof PureScript_CST_Types.BinderOp) {
            return formatHangingOperatorTree(formatQualifiedName)(formatHangingBinder)(conf)(toQualifiedOperatorTree(conf.operators)(Tidy_Precedence.OperatorValue.value)(v.value0)(v.value1));
        };
        if (v instanceof PureScript_CST_Types.BinderError) {
            return Tidy_Hang.hangBreak(conf.formatError(v.value0));
        };
        throw new Error("Failed pattern match at Tidy (line 1117, column 28 - line 1157, column 35): " + [ v.constructor.name ]);
    };
};
var formatBinder = function (conf) {
    var $1002 = formatHangingBinder(conf);
    return function ($1003) {
        return Tidy_Hang.toFormatDoc($1002($1003));
    };
};
var formatWhere = function (conf) {
    return function (v) {
        return Tidy_Doc["break"](formatToken(conf)(v.value0))(formatLetGroups(conf)(Data_Array_NonEmpty.toArray(v.value1)));
    };
};
var formatValueBinding = function (conf) {
    return function (v) {
        if (v.guarded instanceof PureScript_CST_Types.Unconditional) {
            return Tidy_Doc["break"](Tidy_Doc.space(Tidy_Doc.flexSpaceBreak(formatName(conf)(v.name))(Tidy_Doc.indent(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc.spaceBreak)((function () {
                var $1004 = formatBinder(conf);
                return function ($1005) {
                    return Tidy_Doc.anchor($1004($1005));
                };
            })())(v.binders))))(Tidy_Hang.toFormatDoc(Tidy_Hang.hang(Tidy_Doc.indent(Tidy_Doc.anchor(formatToken(conf)(v.guarded.value0))))(formatHangingExpr(conf)(v.guarded.value1.expr)))))(Tidy_Doc.indent(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatWhere(conf))(v.guarded.value1.bindings)));
        };
        if (v.guarded instanceof PureScript_CST_Types.Guarded) {
            var valBinders = Tidy_Doc.flexSpaceBreak(formatName(conf)(v.name))(Tidy_Doc.indent(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc.spaceBreak)((function () {
                var $1006 = formatBinder(conf);
                return function ($1007) {
                    return Tidy_Doc.anchor(Tidy_Doc.flexGroup($1006($1007)));
                };
            })())(v.binders)));
            var $662 = Data_Array_NonEmpty.length(v.guarded.value0) === 1;
            if ($662) {
                return Tidy_Hang.toFormatDoc(Tidy_Hang.hang(valBinders)(formatGuardedExpr(conf)(Data_Array_NonEmpty.head(v.guarded.value0))));
            };
            return Tidy_Doc.flexSpaceBreak(valBinders)(Tidy_Doc.indent(Tidy_Doc.joinWithMap(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Tidy_Doc["break"])((function () {
                var $1008 = formatGuardedExpr(conf);
                return function ($1009) {
                    return Tidy_Hang.toFormatDoc($1008($1009));
                };
            })())(v.guarded.value0)));
        };
        throw new Error("Failed pattern match at Tidy (line 1077, column 3 - line 1097, column 86): " + [ v.guarded.constructor.name ]);
    };
};
var formatRecordUpdate = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.RecordUpdateLeaf) {
            return declareHanging(formatName(conf)(v.value0))(Tidy_Doc.space)(formatToken(conf)(v.value1))(formatHangingExpr(conf)(v.value2));
        };
        if (v instanceof PureScript_CST_Types.RecordUpdateBranch) {
            return Tidy_Doc.flexSpaceBreak(formatName(conf)(v.value0))(Tidy_Doc.indent(formatBasicListNonEmpty(Grouped.value)(formatRecordUpdate)(conf)(v.value1)));
        };
        throw new Error("Failed pattern match at Tidy (line 991, column 27 - line 996, column 66): " + [ v.constructor.name ]);
    };
};
var formatPatternGuard = function (conf) {
    return function (v) {
        if (v.binder instanceof Data_Maybe.Nothing) {
            return formatExpr(conf)(v.expr);
        };
        if (v.binder instanceof Data_Maybe.Just) {
            return Tidy_Doc.space(formatBinder(conf)(v.binder.value0.value0))(Tidy_Doc.indent(Tidy_Doc.flexSpaceBreak(Tidy_Doc.anchor(formatToken(conf)(v.binder.value0.value1)))(formatExpr(conf)(v.expr))));
        };
        throw new Error("Failed pattern match at Tidy (line 1046, column 59 - line 1052, column 46): " + [ v.binder.constructor.name ]);
    };
};
var formatLetBinding = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.LetBindingSignature) {
            return formatSignature(conf)({
                label: formatName(conf)(v.value0.label),
                separator: v.value0.separator,
                value: v.value0.value
            });
        };
        if (v instanceof PureScript_CST_Types.LetBindingName) {
            return formatValueBinding(conf)(v.value0);
        };
        if (v instanceof PureScript_CST_Types.LetBindingPattern) {
            return Tidy_Doc["break"](Tidy_Doc.space(Tidy_Doc.flexGroup(formatBinder(conf)(v.value0)))(Tidy_Hang.toFormatDoc(Tidy_Hang.hang(Tidy_Doc.indent(Tidy_Doc.anchor(formatToken(conf)(v.value1))))(formatHangingExpr(conf)(v.value2.expr)))))(Tidy_Doc.indent(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatWhere(conf))(v.value2.bindings)));
        };
        if (v instanceof PureScript_CST_Types.LetBindingError) {
            return conf.formatError(v.value0);
        };
        throw new Error("Failed pattern match at Tidy (line 1060, column 25 - line 1073, column 23): " + [ v.constructor.name ]);
    };
};
var formatLetGroups = (function () {
    var letGroup = function (v) {
        if (v instanceof PureScript_CST_Types.LetBindingSignature) {
            return new DeclGroupValueSignature(v.value0.label.name);
        };
        if (v instanceof PureScript_CST_Types.LetBindingName) {
            return new DeclGroupValue(v.value0.name.name);
        };
        if (v instanceof PureScript_CST_Types.LetBindingPattern) {
            return DeclGroupUnknown.value;
        };
        if (v instanceof PureScript_CST_Types.LetBindingError) {
            return DeclGroupUnknown.value;
        };
        throw new Error("Failed pattern match at Tidy (line 1343, column 14 - line 1347, column 42): " + [ v.constructor.name ]);
    };
    var letDeclGroupSeparator = function (v) {
        return function (v1) {
            if (v1 instanceof DeclGroupValueSignature) {
                return DeclGroupHard.value;
            };
            return DeclGroupSame.value;
        };
    };
    return formatDeclGroups(letDeclGroupSeparator)(letGroup)(formatLetBinding);
})();
var formatHangingExpr = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.ExprHole) {
            return Tidy_Hang.hangBreak(formatName(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprSection) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprIdent) {
            return Tidy_Hang.hangBreak(formatQualifiedName(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprConstructor) {
            return Tidy_Hang.hangBreak(formatQualifiedName(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprBoolean) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprChar) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprString) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprInt) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprNumber) {
            return Tidy_Hang.hangBreak(formatToken(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprArray) {
            return Tidy_Hang.hangBreak(formatBasicList(Grouped.value)(formatExpr)(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprRecord) {
            return Tidy_Hang.hangBreak(formatBasicList(Grouped.value)(formatRecordLabeled(formatHangingExpr))(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprParens) {
            return Tidy_Hang.hangBreak(formatParensBlock(formatExpr)(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprTyped) {
            return Tidy_Hang.hangBreak(formatSignature(conf)({
                label: formatExpr(conf)(v.value0),
                separator: v.value1,
                value: v.value2
            }));
        };
        if (v instanceof PureScript_CST_Types.ExprInfix) {
            return Tidy_Hang.hangOps(formatHangingExpr(conf)(v.value0))(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(function (v1) {
                return new Tidy_Hang.HangingOp(3, formatParens(formatExpr)(conf)(v1.value0), formatHangingExpr(conf)(v1.value1));
            })(v.value1));
        };
        if (v instanceof PureScript_CST_Types.ExprOp) {
            return formatHangingOperatorTree(formatQualifiedName)(formatHangingExpr)(conf)(toQualifiedOperatorTree(conf.operators)(Tidy_Precedence.OperatorValue.value)(v.value0)(v.value1));
        };
        if (v instanceof PureScript_CST_Types.ExprOpName) {
            return Tidy_Hang.hangBreak(formatQualifiedName(conf)(v.value0));
        };
        if (v instanceof PureScript_CST_Types.ExprNegate) {
            return Tidy_Hang.hangBreak(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(formatToken(conf)(v.value0))(formatExpr(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.ExprRecordAccessor) {
            return Tidy_Hang.hangBreak(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(formatExpr(conf)(v.value0.expr))(Tidy_Doc.indent(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Tidy_Doc.monoidFormatDoc)(Tidy_Doc.anchor)([ formatToken(conf)(v.value0.dot), formatName(conf)(v.value0.path.head), Data_Foldable.foldMap(Data_Foldable.foldableArray)(Tidy_Doc.monoidFormatDoc)(function (v1) {
                return Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(Tidy_Doc.anchor(formatToken(conf)(v1.value0)))(Tidy_Doc.anchor(formatName(conf)(v1.value1)));
            })(v.value0.path.tail) ]))));
        };
        if (v instanceof PureScript_CST_Types.ExprRecordUpdate) {
            return Tidy_Hang.hang(formatExpr(conf)(v.value0))(Tidy_Hang.hangBreak(formatBasicListNonEmpty(Grouped.value)(formatRecordUpdate)(conf)(v.value1)));
        };
        if (v instanceof PureScript_CST_Types.ExprApp) {
            return Tidy_Hang.hangApp(formatHangingExpr(conf)(v.value0))(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(formatHangingExpr(conf))(v.value1));
        };
        if (v instanceof PureScript_CST_Types.ExprLambda) {
            var binders = Tidy_Doc.flexGroup(Tidy_Doc.joinWithMap(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Tidy_Doc.spaceBreak)((function () {
                var $1010 = formatBinder(conf);
                return function ($1011) {
                    return Tidy_Doc.anchor($1010($1011));
                };
            })())(v.value0.binders));
            return Tidy_Hang.hang(Tidy_Doc.space(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(formatToken(conf)(v.value0.symbol))(Tidy_Doc.alignCurrentColumn(binders)))(Tidy_Doc.indent(Tidy_Doc.anchor(formatToken(conf)(v.value0.arrow)))))(formatHangingExpr(conf)(v.value0.body));
        };
        if (v instanceof PureScript_CST_Types.ExprIf) {
            return Tidy_Hang.hangBreak(formatElseIfChain(conf)(toElseIfChain(v.value0)));
        };
        if (v instanceof PureScript_CST_Types.ExprCase) {
            var caseHeadExprs = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (doc) {
                return function (v1) {
                    return Tidy_Doc.spaceBreak(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(doc)(Tidy_Doc.anchor(formatToken(conf)(v1.value0))))(Tidy_Doc.flexGroup(formatExpr(conf)(v1.value1)));
                };
            })(Tidy_Doc.flexGroup(formatExpr(conf)(v.value0.head.head)))(v.value0.head.tail);
            var caseHead = Tidy_Doc.spaceBreak(caseHeadExprs)(Tidy_Doc.anchor(formatToken(conf)(v.value0.of)));
            return Tidy_Hang.hang(Tidy_Doc.flexSpaceBreak(formatToken(conf)(v.value0.keyword))(Tidy_Doc.indent(caseHead)))(Tidy_Hang.hangBreak(Tidy_Doc.joinWithMap(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Tidy_Doc["break"])((function () {
                var $1012 = formatCaseBranch(conf);
                return function ($1013) {
                    return Tidy_Doc.flexGroup($1012($1013));
                };
            })())(v.value0.branches)));
        };
        if (v instanceof PureScript_CST_Types.ExprLet) {
            return Tidy_Hang.hangBreak(Tidy_Doc.spaceBreak(Tidy_Doc.spaceBreak(formatToken(conf)(v.value0.keyword))(Tidy_Doc.indent(formatLetGroups(conf)(Data_Array_NonEmpty.toArray(v.value0.bindings)))))(Tidy_Doc.spaceBreak(formatToken(conf)(v["value0"]["in"]))(Tidy_Doc.indent(Tidy_Doc.flexGroup(formatExpr(conf)(v.value0.body))))));
        };
        if (v instanceof PureScript_CST_Types.ExprDo) {
            return Tidy_Hang.hang(formatToken(conf)(v.value0.keyword))(Tidy_Hang.hangBreak(Tidy_Doc.joinWithMap(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Tidy_Doc["break"])((function () {
                var $1014 = formatDoStatement(conf);
                return function ($1015) {
                    return Tidy_Doc.flexGroup($1014($1015));
                };
            })())(v.value0.statements)));
        };
        if (v instanceof PureScript_CST_Types.ExprAdo) {
            return Tidy_Hang.hang(formatToken(conf)(v.value0.keyword))(Tidy_Hang.hangBreak(Tidy_Doc.flexSpaceBreak(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc["break"])(formatDoStatement(conf))(v.value0.statements))(Tidy_Doc.flexSpaceBreak(formatToken(conf)(v["value0"]["in"]))(Tidy_Doc.indent(formatExpr(conf)(v.value0.result))))));
        };
        if (v instanceof PureScript_CST_Types.ExprError) {
            return Tidy_Hang.hangBreak(conf.formatError(v.value0));
        };
        throw new Error("Failed pattern match at Tidy (line 839, column 26 - line 954, column 35): " + [ v.constructor.name ]);
    };
};
var formatGuardedExpr = function (conf) {
    return function (v) {
        var patternGuards = Tidy_Doc.softBreak(formatListElem(2)(formatPatternGuard)(conf)(v.patterns.head))(formatListTail(2)(formatPatternGuard)(conf)(v.patterns.tail));
        return Tidy_Hang.hangWithIndent((function () {
            var $1016 = Tidy_Doc.align(2);
            return function ($1017) {
                return $1016(Tidy_Doc.indent($1017));
            };
        })())(Tidy_Hang.hangBreak(Tidy_Doc.space(Tidy_Doc.space(formatToken(conf)(v.bar))(Tidy_Doc.flexGroup(patternGuards)))(Tidy_Doc.anchor(formatToken(conf)(v.separator)))))((function () {
            if (v.where.bindings instanceof Data_Maybe.Nothing) {
                return [ formatHangingExpr(conf)(v.where.expr) ];
            };
            if (v.where.bindings instanceof Data_Maybe.Just) {
                return [ formatHangingExpr(conf)(v.where.expr), Tidy_Hang.hangBreak(formatWhere(conf)(v.where.bindings.value0)) ];
            };
            throw new Error("Failed pattern match at Tidy (line 1033, column 5 - line 1039, column 10): " + [ v.where.bindings.constructor.name ]);
        })());
    };
};
var formatExpr = function (conf) {
    var $1018 = formatHangingExpr(conf);
    return function ($1019) {
        return Tidy_Hang.toFormatDoc($1018($1019));
    };
};
var formatElseIfChain = function (conf) {
    var $1020 = Tidy_Doc.joinWithMap(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Tidy_Doc.spaceBreak)(function (v) {
        if (v instanceof IfThen) {
            return Tidy_Doc.space(Tidy_Doc.flexSpaceBreak(formatToken(conf)(v.value0))(Tidy_Doc.indent(Tidy_Doc.anchor(Tidy_Doc.flexGroup(formatExpr(conf)(v.value1))))))(Tidy_Hang.toFormatDoc(Tidy_Hang.hang(Tidy_Doc.anchor(formatToken(conf)(v.value2)))(formatHangingExpr(conf)(v.value3))));
        };
        if (v instanceof ElseIfThen) {
            return Tidy_Doc.space(Tidy_Doc.flexSpaceBreak(Tidy_Doc.space(formatToken(conf)(v.value0))(Tidy_Doc.indent(Tidy_Doc.anchor(formatToken(conf)(v.value1)))))(Tidy_Doc.indent(Tidy_Doc.anchor(Tidy_Doc.flexGroup(formatExpr(conf)(v.value2))))))(Tidy_Hang.toFormatDoc(Tidy_Hang.hang(Tidy_Doc.anchor(formatToken(conf)(v.value3)))(formatHangingExpr(conf)(v.value4))));
        };
        if (v instanceof Else) {
            return Tidy_Hang.toFormatDoc(Tidy_Hang.hang(formatToken(conf)(v.value0))(formatHangingExpr(conf)(v.value1)));
        };
        throw new Error("Failed pattern match at Tidy (line 972, column 63 - line 988, column 79): " + [ v.constructor.name ]);
    });
    return function ($1021) {
        return Tidy_Doc.flexGroup($1020($1021));
    };
};
var formatDoStatement = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.DoLet) {
            return Tidy_Doc.flexSpaceBreak(formatToken(conf)(v.value0))(Tidy_Doc.indent(formatLetGroups(conf)(Data_Array_NonEmpty.toArray(v.value1))));
        };
        if (v instanceof PureScript_CST_Types.DoDiscard) {
            return formatExpr(conf)(v.value0);
        };
        if (v instanceof PureScript_CST_Types.DoBind) {
            return Tidy_Doc.space(Tidy_Doc.flexGroup(formatBinder(conf)(v.value0)))(Tidy_Hang.toFormatDoc(Tidy_Hang.hang(Tidy_Doc.indent(Tidy_Doc.anchor(formatToken(conf)(v.value1))))(formatHangingExpr(conf)(v.value2))));
        };
        if (v instanceof PureScript_CST_Types.DoError) {
            return conf.formatError(v.value0);
        };
        throw new Error("Failed pattern match at Tidy (line 1100, column 26 - line 1111, column 23): " + [ v.constructor.name ]);
    };
};
var formatCaseBranch = function (conf) {
    return function (v) {
        var caseBinders = Tidy_Doc.flexGroup(Data_Foldable.foldl(Data_Foldable.foldableArray)(function (doc) {
            return function (v1) {
                return Tidy_Doc.spaceBreak(Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(doc)(Tidy_Doc.indent(Tidy_Doc.anchor(formatToken(conf)(v1.value0)))))(Tidy_Doc.flexGroup(formatBinder(conf)(v1.value1)));
            };
        })(Tidy_Doc.flexGroup(formatBinder(conf)(v.value0.head)))(v.value0.tail));
        if (v.value1 instanceof PureScript_CST_Types.Unconditional) {
            return Tidy_Doc["break"](Tidy_Doc.space(caseBinders)(Tidy_Hang.toFormatDoc(Tidy_Hang.hang(formatToken(conf)(v.value1.value0))(formatHangingExpr(conf)(v.value1.value1.expr)))))(Tidy_Doc.indent(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatWhere(conf))(v.value1.value1.bindings)));
        };
        if (v.value1 instanceof PureScript_CST_Types.Guarded) {
            var $801 = Data_Array_NonEmpty.length(v.value1.value0) === 1;
            if ($801) {
                return Tidy_Hang.toFormatDoc(Tidy_Hang.hang(caseBinders)(formatGuardedExpr(conf)(Data_Array_NonEmpty.head(v.value1.value0))));
            };
            return Tidy_Doc.flexSpaceBreak(caseBinders)(Tidy_Doc.indent(Tidy_Doc.joinWithMap(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Tidy_Doc["break"])((function () {
                var $1022 = formatGuardedExpr(conf);
                return function ($1023) {
                    return Tidy_Hang.toFormatDoc($1022($1023));
                };
            })())(v.value1.value0)));
        };
        throw new Error("Failed pattern match at Tidy (line 1000, column 3 - line 1013, column 81): " + [ v.value1.constructor.name ]);
    };
};
var formatInstanceBinding = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.InstanceBindingSignature) {
            return formatSignature(conf)(Tidy_Util.overLabel(formatName(conf))(v.value0));
        };
        if (v instanceof PureScript_CST_Types.InstanceBindingName) {
            return formatValueBinding(conf)(v.value0);
        };
        throw new Error("Failed pattern match at Tidy (line 621, column 30 - line 625, column 32): " + [ v.constructor.name ]);
    };
};
var formatInstance = function (conf) {
    return function (v) {
        if (v.body instanceof Data_Maybe.Nothing) {
            return formatInstanceHead(conf)(new Data_Tuple.Tuple(v.head, Data_Maybe.Nothing.value));
        };
        if (v.body instanceof Data_Maybe.Just) {
            return Tidy_Doc["break"](formatInstanceHead(conf)(new Data_Tuple.Tuple(v.head, new Data_Maybe.Just(v.body.value0.value0))))(Tidy_Doc.indent(Tidy_Doc.joinWithMap(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Tidy_Doc["break"])(formatInstanceBinding(conf))(v.body.value0.value1)));
        };
        throw new Error("Failed pattern match at Tidy (line 593, column 49 - line 598, column 62): " + [ v.body.constructor.name ]);
    };
};
var formatDecl = function (conf) {
    return function (v) {
        if (v instanceof PureScript_CST_Types.DeclData && v.value1 instanceof Data_Maybe.Just) {
            var formatDataElem = function (v1) {
                return Tidy_Doc.space(formatToken(conf)(v1.value0))(formatListElem(2)(formatDataCtor)(conf)(v1.value1));
            };
            var $822 = Data_Array["null"](v.value1.value0.value1.tail);
            if ($822) {
                return declareHanging(formatDataHead(conf)(v.value0))(Tidy_Doc.space)(Tidy_Doc.anchor(formatToken(conf)(v.value1.value0.value0)))(formatHangingDataCtor(conf)(v.value1.value0.value1.head));
            };
            return Tidy_Doc.flexSpaceBreak(formatDataHead(conf)(v.value0))(Tidy_Doc.indent(Tidy_Doc.spaceBreak(formatDataElem(new Data_Tuple.Tuple(v.value1.value0.value0, v.value1.value0.value1.head)))(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc.spaceBreak)(formatDataElem)(v.value1.value0.value1.tail))));
        };
        if (v instanceof PureScript_CST_Types.DeclData) {
            return formatDataHead(conf)(v.value0);
        };
        if (v instanceof PureScript_CST_Types.DeclType) {
            return declareHanging(formatDataHead(conf)(v.value0))(Tidy_Doc.space)(Tidy_Doc.anchor(formatToken(conf)(v.value1)))(formatHangingType(conf)(v.value2));
        };
        if (v instanceof PureScript_CST_Types.DeclNewtype) {
            return declareHanging(formatDataHead(conf)(v.value0))(Tidy_Doc.space)(Tidy_Doc.anchor(formatToken(conf)(v.value1)))(formatHangingDataCtor(conf)({
                name: v.value2,
                fields: [ v.value3 ]
            }));
        };
        if (v instanceof PureScript_CST_Types.DeclRole) {
            var words = [ formatToken(conf)(v.value0), formatToken(conf)(v.value1), formatName(conf)(v.value2) ];
            var roles = Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)((function () {
                var $1024 = formatToken(conf);
                return function ($1025) {
                    return $1024(Data_Tuple.fst($1025));
                };
            })())(v.value3);
            return flatten(Data_Semigroup.append(Data_Semigroup.semigroupArray)(words)(Data_Array_NonEmpty.toArray(roles)));
        };
        if (v instanceof PureScript_CST_Types.DeclFixity) {
            if (v.value0.operator instanceof PureScript_CST_Types.FixityValue) {
                return flatten([ formatToken(conf)(v.value0.keyword.value0), formatToken(conf)(v.value0.prec.value0), formatQualifiedName(conf)(v.value0.operator.value0), formatToken(conf)(v.value0.operator.value1), formatName(conf)(v.value0.operator.value2) ]);
            };
            if (v.value0.operator instanceof PureScript_CST_Types.FixityType) {
                return flatten([ formatToken(conf)(v.value0.keyword.value0), formatToken(conf)(v.value0.prec.value0), formatToken(conf)(v.value0.operator.value0), formatQualifiedName(conf)(v.value0.operator.value1), formatToken(conf)(v.value0.operator.value2), formatName(conf)(v.value0.operator.value3) ]);
            };
            throw new Error("Failed pattern match at Tidy (line 426, column 5 - line 443, column 12): " + [ v.value0.operator.constructor.name ]);
        };
        if (v instanceof PureScript_CST_Types.DeclKindSignature) {
            return formatSignature(conf)({
                label: flatten([ formatToken(conf)(v.value0), formatName(conf)(v.value1.label) ]),
                separator: v.value1.separator,
                value: v.value1.value
            });
        };
        if (v instanceof PureScript_CST_Types.DeclForeign) {
            if (v.value2 instanceof PureScript_CST_Types.ForeignValue) {
                return formatSignature(conf)(Tidy_Util.overLabel(function (label) {
                    return flatten([ formatToken(conf)(v.value0), formatToken(conf)(v.value1), formatName(conf)(label) ]);
                })(v.value2.value0));
            };
            if (v.value2 instanceof PureScript_CST_Types.ForeignData) {
                return formatSignature(conf)(Tidy_Util.overLabel(function (label) {
                    return flatten([ formatToken(conf)(v.value0), formatToken(conf)(v.value1), formatToken(conf)(v.value2.value0), formatName(conf)(label) ]);
                })(v.value2.value1));
            };
            if (v.value2 instanceof PureScript_CST_Types.ForeignKind) {
                return flatten([ formatToken(conf)(v.value0), formatToken(conf)(v.value1), formatToken(conf)(v.value2.value0), formatName(conf)(v.value2.value1) ]);
            };
            throw new Error("Failed pattern match at Tidy (line 457, column 5 - line 485, column 12): " + [ v.value2.constructor.name ]);
        };
        if (v instanceof PureScript_CST_Types.DeclClass) {
            if (v.value1 instanceof Data_Maybe.Nothing) {
                return formatClassHead(conf)(new Data_Tuple.Tuple(v.value0, Data_Maybe.Nothing.value));
            };
            if (v.value1 instanceof Data_Maybe.Just) {
                return Tidy_Doc["break"](formatClassHead(conf)(new Data_Tuple.Tuple(v.value0, new Data_Maybe.Just(v.value1.value0.value0))))(Tidy_Doc.indent(Tidy_Doc.joinWithMap(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Tidy_Doc["break"])((function () {
                    var $1026 = formatSignature(conf);
                    var $1027 = Tidy_Util.overLabel(formatName(conf));
                    return function ($1028) {
                        return $1026($1027($1028));
                    };
                })())(v.value1.value0.value1)));
            };
            throw new Error("Failed pattern match at Tidy (line 488, column 5 - line 496, column 19): " + [ v.value1.constructor.name ]);
        };
        if (v instanceof PureScript_CST_Types.DeclInstanceChain) {
            return Tidy_Doc["break"](formatInstance(conf)(v.value0.head))(Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc["break"])(function (v1) {
                return Tidy_Doc.space(formatToken(conf)(v1.value0))(Tidy_Doc.anchor(formatInstance(conf)(v1.value1)));
            })(v.value0.tail));
        };
        if (v instanceof PureScript_CST_Types.DeclDerive) {
            return Tidy_Doc.space(Tidy_Doc.space(formatToken(conf)(v.value0))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)((function () {
                var $1029 = formatToken(conf);
                return function ($1030) {
                    return Tidy_Doc.indent(Tidy_Doc.anchor($1029($1030)));
                };
            })())(v.value1)))(Tidy_Doc.anchor(formatInstanceHead(conf)(new Data_Tuple.Tuple(v.value2, Data_Maybe.Nothing.value))));
        };
        if (v instanceof PureScript_CST_Types.DeclSignature) {
            return formatSignature(conf)(Tidy_Util.overLabel((function () {
                var $1031 = Control_Applicative.pure(Control_Applicative.applicativeArray);
                var $1032 = formatName(conf);
                return function ($1033) {
                    return flatten($1031($1032($1033)));
                };
            })())(v.value0));
        };
        if (v instanceof PureScript_CST_Types.DeclValue) {
            return formatValueBinding(conf)(v.value0);
        };
        if (v instanceof PureScript_CST_Types.DeclError) {
            return conf.formatError(v.value0);
        };
        throw new Error("Failed pattern match at Tidy (line 379, column 19 - line 517, column 23): " + [ v.constructor.name ]);
    };
};
var formatTopLevelGroups = (function () {
    var topDeclGroupSeparator = function (v) {
        return function (v1) {
            if (v instanceof DeclGroupValue && v1 instanceof DeclGroupValue) {
                var $891 = Data_Eq.eq(PureScript_CST_Types.eqIdent)(v.value0)(v1.value0);
                if ($891) {
                    return DeclGroupSame.value;
                };
                return DeclGroupSoft.value;
            };
            if (v instanceof DeclGroupValueSignature && v1 instanceof DeclGroupValue) {
                var $894 = Data_Eq.eq(PureScript_CST_Types.eqIdent)(v.value0)(v1.value0);
                if ($894) {
                    return DeclGroupSame.value;
                };
                return DeclGroupHard.value;
            };
            if (v1 instanceof DeclGroupValueSignature) {
                return DeclGroupHard.value;
            };
            if (v instanceof DeclGroupType && v1 instanceof DeclGroupType) {
                return DeclGroupSoft.value;
            };
            if (v instanceof DeclGroupTypeSignature && v1 instanceof DeclGroupType) {
                var $900 = Data_Eq.eq(PureScript_CST_Types.eqProper)(v.value0)(v1.value0);
                if ($900) {
                    return DeclGroupSame.value;
                };
                return DeclGroupHard.value;
            };
            if (v instanceof DeclGroupTypeSignature && v1 instanceof DeclGroupClass) {
                var $903 = Data_Eq.eq(PureScript_CST_Types.eqProper)(v.value0)(v1.value0);
                if ($903) {
                    return DeclGroupSame.value;
                };
                return DeclGroupHard.value;
            };
            if (v1 instanceof DeclGroupTypeSignature) {
                return DeclGroupHard.value;
            };
            if (v instanceof DeclGroupClass && v1 instanceof DeclGroupClass) {
                return DeclGroupSoft.value;
            };
            if (v1 instanceof DeclGroupClass) {
                return DeclGroupHard.value;
            };
            if (v instanceof DeclGroupInstance && v1 instanceof DeclGroupInstance) {
                return DeclGroupSoft.value;
            };
            if (v1 instanceof DeclGroupInstance) {
                return DeclGroupHard.value;
            };
            if (v instanceof DeclGroupFixity && v1 instanceof DeclGroupFixity) {
                return DeclGroupSoft.value;
            };
            if (v1 instanceof DeclGroupFixity) {
                return DeclGroupHard.value;
            };
            if (v instanceof DeclGroupForeign && v1 instanceof DeclGroupForeign) {
                return DeclGroupSoft.value;
            };
            if (v1 instanceof DeclGroupForeign) {
                return DeclGroupHard.value;
            };
            if (v instanceof DeclGroupRole && v1 instanceof DeclGroupRole) {
                return DeclGroupSoft.value;
            };
            if (v1 instanceof DeclGroupRole) {
                return DeclGroupHard.value;
            };
            return DeclGroupSoft.value;
        };
    };
    var topDeclGroup = function (v) {
        if (v instanceof PureScript_CST_Types.DeclData) {
            return new DeclGroupType(v.value0.name.name);
        };
        if (v instanceof PureScript_CST_Types.DeclType) {
            return new DeclGroupType(v.value0.name.name);
        };
        if (v instanceof PureScript_CST_Types.DeclNewtype) {
            return new DeclGroupType(v.value0.name.name);
        };
        if (v instanceof PureScript_CST_Types.DeclClass) {
            return new DeclGroupClass(v.value0.name.name);
        };
        if (v instanceof PureScript_CST_Types.DeclKindSignature) {
            return new DeclGroupTypeSignature(v.value1.label.name);
        };
        if (v instanceof PureScript_CST_Types.DeclSignature) {
            return new DeclGroupValueSignature(v.value0.label.name);
        };
        if (v instanceof PureScript_CST_Types.DeclValue) {
            return new DeclGroupValue(v.value0.name.name);
        };
        if (v instanceof PureScript_CST_Types.DeclInstanceChain) {
            return DeclGroupInstance.value;
        };
        if (v instanceof PureScript_CST_Types.DeclDerive) {
            return DeclGroupInstance.value;
        };
        if (v instanceof PureScript_CST_Types.DeclFixity) {
            return DeclGroupFixity.value;
        };
        if (v instanceof PureScript_CST_Types.DeclForeign) {
            return DeclGroupForeign.value;
        };
        if (v instanceof PureScript_CST_Types.DeclRole) {
            return DeclGroupRole.value;
        };
        if (v instanceof PureScript_CST_Types.DeclError) {
            return DeclGroupUnknown.value;
        };
        throw new Error("Failed pattern match at Tidy (line 1321, column 18 - line 1334, column 36): " + [ v.constructor.name ]);
    };
    return formatDeclGroups(topDeclGroupSeparator)(topDeclGroup)(formatDecl);
})();
var formatModule = function (conf) {
    return function (v) {
        var formatImports = function (k) {
            return Tidy_Doc.joinWithMap(Data_Foldable.foldableArray)(Tidy_Doc["break"])((function () {
                var $1034 = formatImportDecl(conf);
                return function ($1035) {
                    return k($1034($1035));
                };
            })());
        };
        var imports = (function () {
            if (conf.importSort instanceof ImportSortSource) {
                return formatImports(Control_Category.identity(Control_Category.categoryFn))(v.header.imports);
            };
            if (conf.importSort instanceof ImportSortIde) {
                var toComparison = function (v1) {
                    var modName = Tidy_Util.nameOf(v1.module);
                    var qualName = Data_Functor.map(Data_Maybe.functorMaybe)(function ($1036) {
                        return Tidy_Util.nameOf(Data_Tuple.snd($1036));
                    })(v1.qualified);
                    if (v1.names instanceof Data_Maybe.Just) {
                        var v2 = sortImportsIde(v1.names.value0.value1);
                        var order = (function () {
                            var $959 = Data_Maybe.isJust(v1.names.value0.value0);
                            if ($959) {
                                return 3;
                            };
                            return 1;
                        })();
                        return new Data_Tuple.Tuple(new ImportModuleCmp(modName, order, v2.value0, qualName), {
                            keyword: v1.keyword,
                            module: v1.module,
                            names: new Data_Maybe.Just(new Data_Tuple.Tuple(v1.names.value0.value0, v2.value1)),
                            qualified: v1.qualified
                        });
                    };
                    if (v1.names instanceof Data_Maybe.Nothing) {
                        return new Data_Tuple.Tuple(new ImportModuleCmp(modName, 2, [  ], qualName), v1);
                    };
                    throw new Error("Failed pattern match at Tidy (line 238, column 11 - line 244, column 78): " + [ v1.names.constructor.name ]);
                };
                var sorted = Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(Data_Array.sortWith(ordImportModuleComparison)(Data_Tuple.fst)(Data_Functor.map(Data_Functor.functorArray)(toComparison)(v.header.imports)));
                var isOpenImport = function (v1) {
                    if (v1.qualified instanceof Data_Maybe.Nothing && v1.names instanceof Data_Maybe.Nothing) {
                        return true;
                    };
                    if (v1.qualified instanceof Data_Maybe.Nothing && (v1.names instanceof Data_Maybe.Just && v1.names.value0.value0 instanceof Data_Maybe.Just)) {
                        return true;
                    };
                    return false;
                };
                var v1 = Data_Array.partition(isOpenImport)(sorted);
                return Data_Semigroup.append(Tidy_Doc.semigroupFormatDoc)(formatImports(Tidy_Doc.flatten)(v1.yes))(Tidy_Doc.forceMinSourceBreaks(2)(formatImports(Tidy_Doc.flatten)(v1.no)));
            };
            throw new Error("Failed pattern match at Tidy (line 221, column 5 - line 252, column 18): " + [ conf.importSort.constructor.name ]);
        })();
        return Tidy_Doc.joinWith(Data_Foldable.foldableArray)(Tidy_Doc["break"])([ Tidy_Doc.space(Tidy_Doc.anchor(formatToken(conf)(v.header.keyword)))(Tidy_Doc.indent(Tidy_Doc.space(Tidy_Doc.flexSpaceBreak(Tidy_Doc.anchor(formatName(conf)(v.header.name)))(Tidy_Doc.anchor(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Tidy_Doc.monoidFormatDoc)(formatParenListNonEmpty(NotGrouped.value)(formatExport)(conf))(v.header.exports))))(Tidy_Doc.anchor(formatToken(conf)(v.header.where))))), Tidy_Doc.forceMinSourceBreaks(2)((function () {
            if (conf.importWrap instanceof ImportWrapAuto) {
                return imports;
            };
            if (conf.importWrap instanceof ImportWrapSource) {
                return Tidy_Doc.locally(function (v1) {
                    return {
                        indent: v1.indent,
                        indentSpaces: v1.indentSpaces,
                        indentUnit: v1.indentUnit,
                        indentWidth: v1.indentWidth,
                        pageWidth: Data_Bounded.top(Data_Bounded.boundedInt),
                        ribbonRatio: 1.0
                    };
                })(imports);
            };
            throw new Error("Failed pattern match at Tidy (line 208, column 30 - line 212, column 69): " + [ conf.importWrap.constructor.name ]);
        })()), Tidy_Doc.forceMinSourceBreaks(2)(formatTopLevelGroups(conf)(v.body.decls)), Data_Foldable.foldr(Data_Foldable.foldableArray)(formatComment(Tidy_Doc.leadingLineComment)(Tidy_Doc.leadingBlockComment))(Data_Monoid.mempty(Tidy_Doc.monoidFormatDoc))(v.body.trailingComments) ]);
    };
};
module.exports = {
    defaultFormatOptions: defaultFormatOptions,
    TypeArrowFirst: TypeArrowFirst,
    TypeArrowLast: TypeArrowLast,
    ImportSortSource: ImportSortSource,
    ImportSortIde: ImportSortIde,
    ImportWrapSource: ImportWrapSource,
    ImportWrapAuto: ImportWrapAuto,
    formatModule: formatModule,
    formatDecl: formatDecl,
    formatType: formatType,
    formatExpr: formatExpr,
    formatBinder: formatBinder,
    formatError: formatError,
    eqTypeArrowOption: eqTypeArrowOption,
    eqImportWrapOption: eqImportWrapOption,
    eqImportSortOpion: eqImportSortOpion,
    formatErrorVoid: formatErrorVoid,
    formatErrorRecoveredError: formatErrorRecoveredError,
    toDoc: Tidy_Doc.toDoc,
    UnicodeAlways: Tidy_Token.UnicodeAlways,
    UnicodeNever: Tidy_Token.UnicodeNever,
    UnicodeSource: Tidy_Token.UnicodeSource
};
