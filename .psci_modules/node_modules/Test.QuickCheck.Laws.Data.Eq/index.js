"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Test_QuickCheck = require("../Test.QuickCheck/index.js");

// | - Reflexivity: `x == x = true`
// | - Symmetry: `x == y = y == x`
// | - Transitivity: if `x == y` and `y == z` then `x == z`
// | - Negation: `x /= y = not (x == y)`
var checkEq = function (dictArbitrary) {
    return function (dictEq) {
        return function (v) {
            var transitivity = function (x) {
                return function (y) {
                    return function (z) {
                        var $3 = Data_Eq.eq(dictEq)(x)(y) && Data_Eq.eq(dictEq)(y)(z);
                        if ($3) {
                            return Data_Eq.eq(dictEq)(x)(z);
                        };
                        return true;
                    };
                };
            };
            var symmetry = function (x) {
                return function (y) {
                    return Data_Eq.eq(dictEq)(x)(y) === Data_Eq.eq(dictEq)(y)(x);
                };
            };
            var reflexivity = function (x) {
                return Data_Eq.eq(dictEq)(x)(x) === true;
            };
            var negation = function (x) {
                return function (y) {
                    return Data_Eq.notEq(dictEq)(x)(y) === !Data_Eq.eq(dictEq)(x)(y);
                };
            };
            return function __do() {
                Effect_Console.log("Checking 'Reflexivity' law for Eq")();
                Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableBoolean))(1000)(reflexivity)();
                Effect_Console.log("Checking 'Symmetry' law for Eq")();
                Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableBoolean)))(1000)(symmetry)();
                Effect_Console.log("Checking 'Transitivity' law for Eq")();
                Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableBoolean))))(1000)(transitivity)();
                Effect_Console.log("Checking 'Negation' law for Eq")();
                return Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableBoolean)))(1000)(negation)();
            };
        };
    };
};
module.exports = {
    checkEq: checkEq
};
