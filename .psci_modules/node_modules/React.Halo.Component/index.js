"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Unsafe = require("../Effect.Unsafe/index.js");
var React_Basic_Hooks = require("../React.Basic.Hooks/index.js");
var React_Basic_Hooks_Internal = require("../React.Basic.Hooks.Internal/index.js");
var React_Halo_Internal_Eval = require("../React.Halo.Internal.Eval/index.js");
var React_Halo_Internal_State = require("../React.Halo.Internal.State/index.js");
var Type_Equality = require("../Type.Equality/index.js");
var UseHalo = function (x) {
    return x;
};
var newtypeUseHalo = {
    Coercible0: function () {
        return undefined;
    }
};

// | Run renderless Halo in the current component. This allows Halo to be used with other hooks and other ways of
// | building components.
var useHalo = function (v) {
    return React_Basic_Hooks_Internal.coerceHook()(React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks["useState'"](v.initialState))(function (v1) {
        return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useMemo(Data_Eq.eqUnit)(Data_Unit.unit)(function (v2) {
            return Effect_Unsafe.unsafePerformEffect(React_Halo_Internal_State.createInitialState({
                props: v.props,
                context: v.context,
                state: v.initialState,
                "eval": v["eval"],
                update: v1.value1
            }));
        }))(function (halo) {
            return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useEffectOnce(Control_Apply.applySecond(Effect.applyEffect)(React_Halo_Internal_Eval.runInitialize(halo))(Control_Applicative.pure(Effect.applicativeEffect)(React_Halo_Internal_Eval.runFinalize(halo)))))(function () {
                return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useEffectAlways(Control_Apply.applySecond(Effect.applyEffect)(React_Halo_Internal_Eval.handleUpdate(halo)(v.props)(v.context))(Data_Monoid.mempty(Effect.monoidEffect(Effect.monoidEffect(Data_Monoid.monoidUnit))))))(function () {
                    return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(new Data_Tuple.Tuple(v1.value0, React_Halo_Internal_Eval.handleAction(halo)));
                });
            });
        });
    }));
};

// | Build a component by providing a name and a Halo component spec.
var component = function (name) {
    return function (v) {
        return React_Basic_Hooks.component(name)(function (props) {
            return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(v.context(props))(function (context) {
                return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useMemo(Data_Eq.eqUnit)(Data_Unit.unit)(function (v1) {
                    return v.initialState(props)(context);
                }))(function (initialState) {
                    return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(useHalo({
                        props: props,
                        context: context,
                        initialState: initialState,
                        "eval": v["eval"]
                    }))(function (v1) {
                        return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(v.render({
                            props: props,
                            context: context,
                            state: v1.value0,
                            send: v1.value1
                        }));
                    });
                });
            });
        });
    };
};
module.exports = {
    UseHalo: UseHalo,
    useHalo: useHalo,
    component: component,
    newtypeUseHalo: newtypeUseHalo
};
