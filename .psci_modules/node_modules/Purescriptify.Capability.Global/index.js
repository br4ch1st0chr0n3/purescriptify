"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Halogen_Subscription = require("../Halogen.Subscription/index.js");
var React_Halo_Internal_Control = require("../React.Halo.Internal.Control/index.js");
var APIErrorOccurred = (function () {
    function APIErrorOccurred(value0) {
        this.value0 = value0;
    };
    APIErrorOccurred.create = function (value0) {
        return new APIErrorOccurred(value0);
    };
    return APIErrorOccurred;
})();
var UseMeForIssuingMassCommands = (function () {
    function UseMeForIssuingMassCommands() {

    };
    UseMeForIssuingMassCommands.value = new UseMeForIssuingMassCommands();
    return UseMeForIssuingMassCommands;
})();
var getGlobalEventsEmitter = function (dict) {
    return dict.getGlobalEventsEmitter;
};
var subscribeForGlobalEvents = function (dictMonadGlobal) {
    return function (f) {
        return Control_Bind.bind(React_Halo_Internal_Control.bindHaloM)(Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadGlobal.Monad0())(getGlobalEventsEmitter(dictMonadGlobal)))(function (emitter) {
            return Data_Functor["void"](React_Halo_Internal_Control.functorHaloM)(React_Halo_Internal_Control.subscribe(Data_Functor.map(Halogen_Subscription.functorEmitter)(f)(emitter)));
        });
    };
};
var getGlobalActionsEmitter = function (dict) {
    return dict.getGlobalActionsEmitter;
};
var subscribeForGlobalActions = function (dictMonadGlobal) {
    return function (f) {
        return Control_Bind.bind(React_Halo_Internal_Control.bindHaloM)(Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadGlobal.Monad0())(getGlobalActionsEmitter(dictMonadGlobal)))(function (emitter) {
            return Data_Functor["void"](React_Halo_Internal_Control.functorHaloM)(React_Halo_Internal_Control.subscribe(Data_Functor.map(Halogen_Subscription.functorEmitter)(f)(emitter)));
        });
    };
};
var emitGlobalEvent = function (dict) {
    return dict.emitGlobalEvent;
};
var emitGlobalAction = function (dict) {
    return dict.emitGlobalAction;
};
var monadGlobalHaloM = function (dictMonadGlobal) {
    return {
        emitGlobalAction: (function () {
            var $8 = Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadGlobal.Monad0());
            var $9 = emitGlobalAction(dictMonadGlobal);
            return function ($10) {
                return $8($9($10));
            };
        })(),
        emitGlobalEvent: (function () {
            var $11 = Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadGlobal.Monad0());
            var $12 = emitGlobalEvent(dictMonadGlobal);
            return function ($13) {
                return $11($12($13));
            };
        })(),
        getGlobalEventsEmitter: Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadGlobal.Monad0())(getGlobalEventsEmitter(dictMonadGlobal)),
        getGlobalActionsEmitter: Control_Monad_Trans_Class.lift(React_Halo_Internal_Control.monadTransHaloM)(dictMonadGlobal.Monad0())(getGlobalActionsEmitter(dictMonadGlobal)),
        Monad0: function () {
            return React_Halo_Internal_Control.monadHaloM;
        }
    };
};
module.exports = {
    emitGlobalAction: emitGlobalAction,
    emitGlobalEvent: emitGlobalEvent,
    getGlobalActionsEmitter: getGlobalActionsEmitter,
    getGlobalEventsEmitter: getGlobalEventsEmitter,
    UseMeForIssuingMassCommands: UseMeForIssuingMassCommands,
    APIErrorOccurred: APIErrorOccurred,
    subscribeForGlobalEvents: subscribeForGlobalEvents,
    subscribeForGlobalActions: subscribeForGlobalActions,
    monadGlobalHaloM: monadGlobalHaloM
};
