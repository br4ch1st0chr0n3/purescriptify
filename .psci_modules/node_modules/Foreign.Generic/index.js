"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Foreign = require("../Foreign/index.js");
var Foreign_Generic_Class = require("../Foreign.Generic.Class/index.js");
var Foreign_Internal_Stringify = require("../Foreign.Internal.Stringify/index.js");
var Foreign_JSON = require("../Foreign.JSON/index.js");

// | Generate a `Foreign` value compatible with the `genericDecode` function.
var genericEncode = function (dictGeneric) {
    return function (dictGenericEncode) {
        return function (opts) {
            var $10 = Foreign_Generic_Class.encodeOpts(dictGenericEncode)(opts);
            var $11 = Data_Generic_Rep.from(dictGeneric);
            return function ($12) {
                return $10($11($12));
            };
        };
    };
};

// | Write a value which has a `Generic` type as a JSON String
var genericEncodeJSON = function (dictGeneric) {
    return function (dictGenericEncode) {
        return function (opts) {
            var $13 = genericEncode(dictGeneric)(dictGenericEncode)(opts);
            return function ($14) {
                return Foreign_Internal_Stringify.unsafeStringify($13($14));
            };
        };
    };
};

// | Read a value which has a `Generic` type.
var genericDecode = function (dictGeneric) {
    return function (dictGenericDecode) {
        return function (opts) {
            var $15 = Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.to(dictGeneric));
            var $16 = Foreign_Generic_Class.decodeOpts(dictGenericDecode)(opts);
            return function ($17) {
                return $15($16($17));
            };
        };
    };
};

// | Read a value which has a `Generic` type from a JSON String
var genericDecodeJSON = function (dictGeneric) {
    return function (dictGenericDecode) {
        return function (opts) {
            return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(genericDecode(dictGeneric)(dictGenericDecode)(opts))(Foreign_JSON.parseJSON);
        };
    };
};

// | Encode a JSON string using an `Encode` instance.
var encodeJSON = function (dictEncode) {
    var $18 = Foreign_Generic_Class.encode(dictEncode);
    return function ($19) {
        return Foreign_Internal_Stringify.unsafeStringify($18($19));
    };
};

// | Decode a JSON string using a `Decode` instance.
var decodeJSON = function (dictDecode) {
    return Foreign_JSON.decodeJSONWith(Foreign_Generic_Class.decode(dictDecode));
};
module.exports = {
    genericDecode: genericDecode,
    genericEncode: genericEncode,
    decodeJSON: decodeJSON,
    encodeJSON: encodeJSON,
    genericDecodeJSON: genericDecodeJSON,
    genericEncodeJSON: genericEncodeJSON,
    ErrorAtIndex: Foreign.ErrorAtIndex,
    ErrorAtProperty: Foreign.ErrorAtProperty,
    ForeignError: Foreign.ForeignError,
    TypeMismatch: Foreign.TypeMismatch,
    TaggedObject: Foreign_Generic_Class.TaggedObject,
    decode: Foreign_Generic_Class.decode,
    defaultOptions: Foreign_Generic_Class.defaultOptions,
    encode: Foreign_Generic_Class.encode
};
