"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var PureScript_CST_Lexer = require("../PureScript.CST.Lexer/index.js");
var PureScript_CST_TokenStream = require("../PureScript.CST.TokenStream/index.js");
var PureScript_CST_Types = require("../PureScript.CST.Types/index.js");
var Tidy_Precedence = require("../Tidy.Precedence/index.js");
var resolveOperatorExports = function (precMap) {
    return function (v) {
        var remappedPrecMap = Tidy_Precedence.remapOperators(precMap)(v);
        var goExport = function (pm) {
            var $74 = Data_Maybe.fromMaybe(pm);
            return function ($75) {
                return $74((function (v1) {
                    if (v1 instanceof PureScript_CST_Types.ExportOp) {
                        return Control_Bind.bind(Data_Maybe.bindMaybe)(Tidy_Precedence.lookupOperator(new Tidy_Precedence.QualifiedOperator(Data_Maybe.Nothing.value, Tidy_Precedence.OperatorValue.value, v1.value0.name))(remappedPrecMap))(function (prec) {
                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Tidy_Precedence.insertOperator(new Tidy_Precedence.QualifiedOperator(new Data_Maybe.Just(v.header.name.name), Tidy_Precedence.OperatorValue.value, v1.value0.name))(prec)(pm));
                        });
                    };
                    if (v1 instanceof PureScript_CST_Types.ExportTypeOp) {
                        return Control_Bind.bind(Data_Maybe.bindMaybe)(Tidy_Precedence.lookupOperator(new Tidy_Precedence.QualifiedOperator(Data_Maybe.Nothing.value, Tidy_Precedence.OperatorType.value, v1.value1.name))(remappedPrecMap))(function (prec) {
                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Tidy_Precedence.insertOperator(new Tidy_Precedence.QualifiedOperator(new Data_Maybe.Just(v.header.name.name), Tidy_Precedence.OperatorType.value, v1.value1.name))(prec)(pm));
                        });
                    };
                    if (v1 instanceof PureScript_CST_Types.ExportModule) {
                        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Data_Maybe.ordMaybe(PureScript_CST_Types.ordModuleName))(new Data_Maybe.Just(v1.value1.name))(remappedPrecMap))(function (prec) {
                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Map_Internal.insertWith(Data_Maybe.ordMaybe(PureScript_CST_Types.ordModuleName))(Data_Map_Internal.union(Data_Tuple.ordTuple(Tidy_Precedence.ordOperatorNamespace)(PureScript_CST_Types.ordOperator)))(new Data_Maybe.Just(v.header.name.name))(prec)(pm));
                        });
                    };
                    return Data_Maybe.Nothing.value;
                })($75));
            };
        };
        var goDecl = function (pm) {
            return function (v1) {
                if (v1 instanceof PureScript_CST_Types.DeclFixity) {
                    if (v1.value0.operator instanceof PureScript_CST_Types.FixityValue) {
                        return Tidy_Precedence.insertOperator(new Tidy_Precedence.QualifiedOperator(new Data_Maybe.Just(v.header.name.name), Tidy_Precedence.OperatorValue.value, v1.value0.operator.value2.name))(v1.value0.prec.value1)(pm);
                    };
                    if (v1.value0.operator instanceof PureScript_CST_Types.FixityType) {
                        return Tidy_Precedence.insertOperator(new Tidy_Precedence.QualifiedOperator(new Data_Maybe.Just(v.header.name.name), Tidy_Precedence.OperatorType.value, v1.value0.operator.value3.name))(v1.value0.prec.value1)(pm);
                    };
                    throw new Error("Failed pattern match at Tidy.Operators (line 75, column 7 - line 79, column 84): " + [ v1.value0.operator.constructor.name ]);
                };
                return pm;
            };
        };
        if (v.header.exports instanceof Data_Maybe.Nothing) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(goDecl)(precMap)(v.body.decls);
        };
        if (v.header.exports instanceof Data_Maybe.Just) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(goExport)(precMap)(Data_Array.cons(v.header.exports.value0.value.head)(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(v.header.exports.value0.value.tail)));
        };
        throw new Error("Failed pattern match at Tidy.Operators (line 50, column 3 - line 54, column 62): " + [ v.header.exports.constructor.name ]);
    };
};
var parseOperatorPrec = (function () {
    var tokenStreamToArray = (function () {
        var go = function (acc) {
            return function ($76) {
                return (function (v) {
                    if (v instanceof PureScript_CST_TokenStream.TokenEOF) {
                        return new Data_Either.Right(acc);
                    };
                    if (v instanceof PureScript_CST_TokenStream.TokenError) {
                        return new Data_Either.Left(v.value1);
                    };
                    if (v instanceof PureScript_CST_TokenStream.TokenCons) {
                        return go(Data_Array.snoc(acc)(v.value0.value))(v.value2);
                    };
                    throw new Error("Failed pattern match at Tidy.Operators (line 33, column 35 - line 39, column 43): " + [ v.constructor.name ]);
                })(PureScript_CST_TokenStream.step($76));
            };
        };
        return go([  ]);
    })();
    return function ($77) {
        return (function (v) {
            if (v instanceof Data_Either.Right && (v.value0.length === 2 && (v["value0"][0] instanceof PureScript_CST_Types.TokSymbolName && (v["value0"][1] instanceof PureScript_CST_Types.TokInt && v["value0"][1].value1 instanceof PureScript_CST_Types.SmallInt)))) {
                return new Data_Maybe.Just(new Data_Tuple.Tuple(new Tidy_Precedence.QualifiedOperator(v["value0"][0].value0, Tidy_Precedence.OperatorValue.value, v["value0"][0].value1), v["value0"][1].value1.value0));
            };
            if (v instanceof Data_Either.Right && (v.value0.length === 3 && (v["value0"][0] instanceof PureScript_CST_Types.TokSymbolName && (v["value0"][1] instanceof PureScript_CST_Types.TokLowerName && (v["value0"][1].value0 instanceof Data_Maybe.Nothing && (v["value0"][1].value1 === "type" && (v["value0"][2] instanceof PureScript_CST_Types.TokInt && v["value0"][2].value1 instanceof PureScript_CST_Types.SmallInt))))))) {
                return new Data_Maybe.Just(new Data_Tuple.Tuple(new Tidy_Precedence.QualifiedOperator(v["value0"][0].value0, Tidy_Precedence.OperatorType.value, v["value0"][0].value1), v["value0"][2].value1.value0));
            };
            return Data_Maybe.Nothing.value;
        })(tokenStreamToArray(PureScript_CST_Lexer.lex($77)));
    };
})();
var parseOperatorTable = (function () {
    var $78 = Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(Tidy_Precedence.insertOperator))(Data_Map_Internal.empty);
    var $79 = Data_Array.mapMaybe(parseOperatorPrec);
    return function ($80) {
        return $78($79($80));
    };
})();
module.exports = {
    parseOperatorTable: parseOperatorTable,
    parseOperatorPrec: parseOperatorPrec,
    resolveOperatorExports: resolveOperatorExports
};
